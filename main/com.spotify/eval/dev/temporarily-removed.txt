====
# online/spotify-0
U: add fast slow disco to my playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()), id =~ "fast slow disco" => notify;
UT: now => @com.spotify.add_songs_to_playlist(song=$?, playlist=$?);
====
# online/spotify-103
U: play funky tunes playlist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.play_my_playlist(playlist="funky tunes");
====
# online/spotify-177
U: please add the song currently playing to my relax playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.add_this_song_to_playlist(playlist="relax");
====
# online/spotify-239
U: add the space jam theme song to my hype playlist.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()), id =~ "space jam theme song" => notify;
UT: now => @com.spotify.add_songs_to_playlist(playlist="hype", song=$?);
====
# 1
U: play me the song hello .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
A: there are many songs with this name . who is the artist of the song ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_search_question(artists);
U: i don't remember , but the song was released in the 1980's .
UT: $dialogue @org.thingpedia.dialogue.transation.execute;
UT: now => (@com.spotify.song()), (id =~ "hello" && release_date >= new Date("1980-01-01T08:00:00.000Z") && release_date <= new Date("1989-12-31T08:00:00.000Z")) => notify;
C: $dialogue @org.thingpedia.dialogue.transation.execute;
C: now => (@com.spotify.song()), (id =~ "hello" && release_date >= new Date("1980-01-01T08:00:00.000Z") && release_date <= new Date("1989-12-31T08:00:00.000Z")) => notify
C: #[results=[
C:   { id="spotify:track:0mHyWYXmmCB9iQyK18m3FQ"^^com.spotify:song("Hello"), artists=["spotify:artist:3gMaNLQm7D9MornNILzdSl"^^com.spotify:artist("Lionel Richie")], release_date=new Date("1983-01-01T00:00:00.000Z"), popularity=59, energy=24, danceability=48 }
C: ]];
A: i found the song hello by lionel richie .
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
U: yes, thats the one .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (@com.spotify.song()), (id =~ "hello" && release_date >= new Date("1980-01-01T08:00:00.000Z") && release_date <= new Date("1989-12-31T08:00:00.000Z")) => notify
C: #[results=[
C:   { id="spotify:track:0mHyWYXmmCB9iQyK18m3FQ"^^com.spotify:song("Hello"), artists=["spotify:artist:3gMaNLQm7D9MornNILzdSl"^^com.spotify:artist("Lionel Richie")], release_date=new Date("1983-01-01T00:00:00.000Z"), popularity=59, energy=24, danceability=48 }
C: ]];
A: would you like me to play hello by lionel richie .
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify.play_song(song=$?)
AT: #[confirm=enum(proposed)];
U: yes please . thanks .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.play_song(song="spotify:track:0mHyWYXmmCB9iQyK18m3FQ"^^com.spotify:song("Hello"));
====
# 7
U: i'm feeling nostalgic. play me a song from the 1980s .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()), (release_date >= new Date("1980-01-01T08:00:00.000Z") && release_date <= new Date("1989-12-31T08:00:00.000Z")) => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (@com.spotify.song()), (release_date >= new Date("1980-01-01T08:00:00.000Z") && release_date <= new Date("1989-12-31T08:00:00.000Z")) => notify
C: #[results=[
C:   { id="spotify:track:2374M0fQpWi3dLnB54qaLX"^^com.spotify:song("Africa"), artists=["spotify:artist:0PFtn5NtBbbUNbU9EAmIWF"^^com.spotify:artist("TOTO")], release_date=new Date("1982-04-08T00:00:00.000Z"), popularity=83, energy=37, danceability=67 },
C:   { id="spotify:track:0mHyWYXmmCB9iQyK18m3FQ"^^com.spotify:song("Hello"), artists=["spotify:artist:3gMaNLQm7D9MornNILzdSl"^^com.spotify:artist("Lionel Richie")], release_date=new Date("1983-01-01T00:00:00.000Z"), popularity=59, energy=24, danceability=48 },
C:   { id="spotify:track:5tVA6TkbaAH9QMITTQRrNv"^^com.spotify:song("Free Fallin'"), artists=["spotify:artist:2UZMlIwnkgAEDBsw1Rejkn"^^com.spotify:artist("Tom Petty")], release_date=new Date("1989-01-01T00:00:00.000Z"), popularity=78, energy=44, danceability=62 },
C:   { id="spotify:track:4RvWPyQ5RL0ao9LPZeSouE"^^com.spotify:song("Everybody Wants To Rule The World"), artists=["spotify:artist:4bthk9UfsYUYdcFyqxmSUU"^^com.spotify:artist("Tears For Fears")], release_date=new Date("1985-02-25T00:00:00.000Z"), popularity=81, energy=79, danceability=64 },
C:   { id="spotify:track:2tUBqZG2AbRi7Q0BIrVrEj"^^com.spotify:song("I Wanna Dance with Somebody (Who Loves Me)"), artists=["spotify:artist:6XpaIBNiVzIetEPCWDvAFP"^^com.spotify:artist("Whitney Houston")], release_date=new Date("1987-06-02T00:00:00.000Z"), popularity=81, energy=82, danceability=70 },
C:   { id="spotify:track:4bHsxqR3GMrXTxEPLuK5ue"^^com.spotify:song("Don't Stop Believin'"), artists=["spotify:artist:0rvjqX7ttXeg3mTy8Xscbt"^^com.spotify:artist("Journey")], release_date=new Date("1981-01-01T00:00:00.000Z"), popularity=80, energy=74, danceability=5 },
C:   { id="spotify:track:37ZJ0p5Jm13JPevGcx4SkF"^^com.spotify:song("Livin' On A Prayer"), artists=["spotify:artist:58lV9VcRSjABbAbfWS6skp"^^com.spotify:artist("Bon Jovi")], release_date=new Date("1986-08-16T00:00:00.000Z"), popularity=82, energy=88, danceability=53 },
C:   { id="spotify:track:08mG3Y1vljYA6bvDt4Wqkj"^^com.spotify:song("Back In Black"), artists=["spotify:artist:711MCceyCBcFnzjGY4Q7Un"^^com.spotify:artist("AC/DC")], release_date=new Date("1980-07-25T00:00:00.000Z"), popularity=82, energy=7, danceability=31 },
C:   { id="spotify:track:7snQQk1zcKl8gZ92AnueZW"^^com.spotify:song("Sweet Child O' Mine"), artists=["spotify:artist:3qm84nBOXUEQ2vnTfUTTFC"^^com.spotify:artist("Guns N' Roses")], release_date=new Date("1987-07-21T00:00:00.000Z"), popularity=74, energy=95, danceability=44 },
C:   { id="spotify:track:43btz2xjMKpcmjkuRsvxyg"^^com.spotify:song("Jack & Diane"), artists=["spotify:artist:3lPQ2Fk5JOwGWAF3ORFCqH"^^com.spotify:artist("John Mellencamp")], release_date=new Date("1982-01-01T00:00:00.000Z"), popularity=75, energy=41, danceability=81 }
C: ]]
C: #[count=20];
A: i found africa by toto . would you like me to play this song ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify.play_song(song="spotify:track:2374M0fQpWi3dLnB54qaLX"^^com.spotify:song("Africa"))
AT: #[confirm=enum(proposed)];
U: actually, why don't we try the '70s instead .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()), (release_date >= new Date("1970-01-01T08:00:00.000Z") && release_date <= new Date("1979-12-31T08:00:00.000Z")) => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (@com.spotify.song()), (release_date >= new Date("1980-01-01T08:00:00.000Z") && release_date <= new Date("1989-12-31T08:00:00.000Z")) => notify
C: #[results=[
C:   { id="spotify:track:2374M0fQpWi3dLnB54qaLX"^^com.spotify:song("Africa"), artists=["spotify:artist:0PFtn5NtBbbUNbU9EAmIWF"^^com.spotify:artist("TOTO")], release_date=new Date("1982-04-08T00:00:00.000Z"), popularity=83, energy=37, danceability=67 },
C:   { id="spotify:track:0mHyWYXmmCB9iQyK18m3FQ"^^com.spotify:song("Hello"), artists=["spotify:artist:3gMaNLQm7D9MornNILzdSl"^^com.spotify:artist("Lionel Richie")], release_date=new Date("1983-01-01T00:00:00.000Z"), popularity=59, energy=24, danceability=48 },
C:   { id="spotify:track:5tVA6TkbaAH9QMITTQRrNv"^^com.spotify:song("Free Fallin'"), artists=["spotify:artist:2UZMlIwnkgAEDBsw1Rejkn"^^com.spotify:artist("Tom Petty")], release_date=new Date("1989-01-01T00:00:00.000Z"), popularity=78, energy=44, danceability=62 },
C:   { id="spotify:track:4RvWPyQ5RL0ao9LPZeSouE"^^com.spotify:song("Everybody Wants To Rule The World"), artists=["spotify:artist:4bthk9UfsYUYdcFyqxmSUU"^^com.spotify:artist("Tears For Fears")], release_date=new Date("1985-02-25T00:00:00.000Z"), popularity=81, energy=79, danceability=64 },
C:   { id="spotify:track:2tUBqZG2AbRi7Q0BIrVrEj"^^com.spotify:song("I Wanna Dance with Somebody (Who Loves Me)"), artists=["spotify:artist:6XpaIBNiVzIetEPCWDvAFP"^^com.spotify:artist("Whitney Houston")], release_date=new Date("1987-06-02T00:00:00.000Z"), popularity=81, energy=82, danceability=70 },
C:   { id="spotify:track:4bHsxqR3GMrXTxEPLuK5ue"^^com.spotify:song("Don't Stop Believin'"), artists=["spotify:artist:0rvjqX7ttXeg3mTy8Xscbt"^^com.spotify:artist("Journey")], release_date=new Date("1981-01-01T00:00:00.000Z"), popularity=80, energy=74, danceability=5 },
C:   { id="spotify:track:37ZJ0p5Jm13JPevGcx4SkF"^^com.spotify:song("Livin' On A Prayer"), artists=["spotify:artist:58lV9VcRSjABbAbfWS6skp"^^com.spotify:artist("Bon Jovi")], release_date=new Date("1986-08-16T00:00:00.000Z"), popularity=82, energy=88, danceability=53 },
C:   { id="spotify:track:08mG3Y1vljYA6bvDt4Wqkj"^^com.spotify:song("Back In Black"), artists=["spotify:artist:711MCceyCBcFnzjGY4Q7Un"^^com.spotify:artist("AC/DC")], release_date=new Date("1980-07-25T00:00:00.000Z"), popularity=82, energy=7, danceability=31 },
C:   { id="spotify:track:7snQQk1zcKl8gZ92AnueZW"^^com.spotify:song("Sweet Child O' Mine"), artists=["spotify:artist:3qm84nBOXUEQ2vnTfUTTFC"^^com.spotify:artist("Guns N' Roses")], release_date=new Date("1987-07-21T00:00:00.000Z"), popularity=74, energy=95, danceability=44 },
C:   { id="spotify:track:43btz2xjMKpcmjkuRsvxyg"^^com.spotify:song("Jack & Diane"), artists=["spotify:artist:3lPQ2Fk5JOwGWAF3ORFCqH"^^com.spotify:artist("John Mellencamp")], release_date=new Date("1982-01-01T00:00:00.000Z"), popularity=75, energy=41, danceability=81 }
C: ]]
C: #[count=20];
C: now => (@com.spotify.song()), (release_date >= new Date("1970-01-01T08:00:00.000Z") && release_date <= new Date("1979-12-31T08:00:00.000Z")) => notify
C: #[results=[
C:   { id="spotify:track:6vmAgl2y9MpoZKrVUXrPe5"^^com.spotify:song("Hello Darlin'"), artists=["spotify:artist:7gi3jmwpUpNWdswT8eEprF"^^com.spotify:artist("Conway Twitty")], release_date=new Date("1970-03-23T00:00:00.000Z"), popularity=60, energy=23, danceability=27 },
C:   { id="spotify:track:0ofHAoxe9vBkTCp2UQIavz"^^com.spotify:song("Dreams - 2004 Remaster"), artists=["spotify:artist:08GQAI4eElDnROBrJRGE0X"^^com.spotify:artist("Fleetwood Mac")], release_date=new Date("1977-02-04T00:00:00.000Z"), popularity=80, energy=49, danceability=82 },
C:   { id="spotify:track:7e89621JPkKaeDSTQ3avtg"^^com.spotify:song("Sweet Home Alabama"), artists=["spotify:artist:4MVyzYMgTwdP7Z49wAZHx0"^^com.spotify:artist("Lynyrd Skynyrd")], release_date=new Date("1974-04-15T00:00:00.000Z"), popularity=82, energy=60, danceability=59 },
C:   { id="spotify:track:2RlgNHKcydI9sayD2Df2xp"^^com.spotify:song("Mr. Blue Sky"), artists=["spotify:artist:7jefIIksOi1EazgRTfW2Pk"^^com.spotify:artist("Electric Light Orchestra")], release_date=new Date("1977-01-01T00:00:00.000Z"), popularity=81, energy=33, danceability=38 },
C:   { id="spotify:track:3gdewACMIVMEWVbyb8O9sY"^^com.spotify:song("Rocket Man (I Think It's Going To Be A Long, Long Time)"), artists=["spotify:artist:3PhoLpVuITZKcymswpck5b"^^com.spotify:artist("Elton John")], release_date=new Date("1972-05-19T00:00:00.000Z"), popularity=81, energy=53, danceability=60 },
C:   { id="spotify:track:7tFiyTwD0nx5a1eklYtX2J"^^com.spotify:song("Bohemian Rhapsody - 2011 Mix"), artists=["spotify:artist:1dfeR4HaWDbWqFHLkxsg1d"^^com.spotify:artist("Queen")], release_date=new Date("1975-11-21T00:00:00.000Z"), popularity=74, energy=40, danceability=39 },
C:   { id="spotify:track:40riOy7x9W7GXjyGp4pjAv"^^com.spotify:song("Hotel California - 2013 Remaster"), artists=["spotify:artist:0ECwFtbIWEVNwjlrfc6xoL"^^com.spotify:artist("Eagles")], release_date=new Date("1976-12-08T00:00:00.000Z"), popularity=82, energy=50, danceability=57 },
C:   { id="spotify:track:7hQJA50XrCWABAu5v6QZ4i"^^com.spotify:song("Don't Stop Me Now - 2011 Mix"), artists=["spotify:artist:1dfeR4HaWDbWqFHLkxsg1d"^^com.spotify:artist("Queen")], release_date=new Date("1978-11-10T00:00:00.000Z"), popularity=74, energy=86, danceability=56 },
C:   { id="spotify:track:1bp2IO61zbQrbWNmKKxg3f"^^com.spotify:song("The Joker"), artists=["spotify:artist:6QtGlUje9TIkLrgPZrESuk"^^com.spotify:artist("Steve Miller Band")], release_date=new Date("1973-01-01T00:00:00.000Z"), popularity=77, energy=44, danceability=59 },
C:   { id="spotify:track:2TVxnKdb3tqe1nhQWwwZCO"^^com.spotify:song("Tiny Dancer"), artists=["spotify:artist:3PhoLpVuITZKcymswpck5b"^^com.spotify:artist("Elton John")], release_date=new Date("1971-11-05T00:00:00.000Z"), popularity=79, energy=42, danceability=41 }
C: ]]
C: #[count=21];
A: i found dreams by fleetwood mac . should i play this instead ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify.play_song(song="spotify:track:0ofHAoxe9vBkTCp2UQIavz"^^com.spotify:song("Dreams - 2004 Remaster"))
AT: #[confirm=enum(proposed)];
U: absolutely, i love this song .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.play_song(song="spotify:track:0ofHAoxe9vBkTCp2UQIavz"^^com.spotify:song("Dreams - 2004 Remaster"));
====
# 8
U: can you play me songs by justin beiber ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (@com.spotify.song()), contains~(artists, "justin bieber") => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (@com.spotify.song()), contains~(artists, "justin bieber") => notify
C: #[results=[
C:   { id="spotify:track:6rPO02ozF3bM7NnOV4h6s2"^^com.spotify:song("Despacito - Remix"), artists=["spotify:artist:4V8Sr092TqfHkfAA5fXXqG"^^com.spotify:artist("Luis Fonsi"), "spotify:artist:4VMYDCV2IEDYJArk749S6m"^^com.spotify:artist("Daddy Yankee"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2017-04-17T00:00:00.000Z"), popularity=74, energy=0.816, danceability=0.653 },
C:   { id="spotify:track:4HBZA5flZLE435QTztThqH"^^com.spotify:song("Stuck with U (with Justin Bieber)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-05-08T00:00:00.000Z"), popularity=93, energy=0.45, danceability=0.597 },
C:   { id="spotify:track:364dI1bYnvamSnBJ8JcNzN"^^com.spotify:song("Intentions"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:0VRj0yCOv2FXJNP47XQnx5"^^com.spotify:artist("Quavo")], release_date=new Date("2020-02-07T00:00:00.000Z"), popularity=88, energy=0.553, danceability=0.811 },
C:   { id="spotify:track:4umIPjkehX1r7uhmGvXiSV"^^com.spotify:song("Intentions (feat. Quavo)"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:0VRj0yCOv2FXJNP47XQnx5"^^com.spotify:artist("Quavo")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=87, energy=0.546, danceability=0.806 },
C:   { id="spotify:track:1seMsoFYW4dFqTyHgrJeGv"^^com.spotify:song("Sorry"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.764, danceability=0.637 },
C:   { id="spotify:track:0d8jkyht5OV1G5qK1XSOMS"^^com.spotify:song("Baby"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:3ipn9JLAPI5GUEo4y4jcoi"^^com.spotify:artist("Ludacris")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.879, danceability=0.724 },
C:   { id="spotify:track:3jUwj7q1UWu7o87J4E45Zt"^^com.spotify:song("Purpose"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.285, danceability=0.481 },
C:   { id="spotify:track:0j8bKhH7fPCugmewmn5Q9r"^^com.spotify:song("Love Yourself"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.434, danceability=0.786 },
C:   { id="spotify:track:0F99UB5OmeXdzau8srky0h"^^com.spotify:song("Sorry"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.764, danceability=0.637 },
C:   { id="spotify:track:2ZlCGeK30BLRNSPC832pNZ"^^com.spotify:song("Forever (feat. Post Malone & Clever)"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:246dkjvS1zLTtiykXe5h60"^^com.spotify:artist("Post Malone"), "spotify:artist:5yy76ufVriyvidNSvXlRU1"^^com.spotify:artist("Clever")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=78, energy=0.483, danceability=0.825 }
C: ]]
C: #[count=23];
A: i found a lot of songs . could you be a little bit more specific ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_generic_search_question;
U: i haven't listened to him in a while, so can you play his new songs first ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song())), contains(artists, "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")) => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (@com.spotify.song()), contains~(artists, "justin bieber") => notify
C: #[results=[
C:   { id="spotify:track:6rPO02ozF3bM7NnOV4h6s2"^^com.spotify:song("Despacito - Remix"), artists=["spotify:artist:4V8Sr092TqfHkfAA5fXXqG"^^com.spotify:artist("Luis Fonsi"), "spotify:artist:4VMYDCV2IEDYJArk749S6m"^^com.spotify:artist("Daddy Yankee"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2017-04-17T00:00:00.000Z"), popularity=74, energy=0.816, danceability=0.653 },
C:   { id="spotify:track:4HBZA5flZLE435QTztThqH"^^com.spotify:song("Stuck with U (with Justin Bieber)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-05-08T00:00:00.000Z"), popularity=93, energy=0.45, danceability=0.597 },
C:   { id="spotify:track:364dI1bYnvamSnBJ8JcNzN"^^com.spotify:song("Intentions"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:0VRj0yCOv2FXJNP47XQnx5"^^com.spotify:artist("Quavo")], release_date=new Date("2020-02-07T00:00:00.000Z"), popularity=88, energy=0.553, danceability=0.811 },
C:   { id="spotify:track:4umIPjkehX1r7uhmGvXiSV"^^com.spotify:song("Intentions (feat. Quavo)"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:0VRj0yCOv2FXJNP47XQnx5"^^com.spotify:artist("Quavo")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=87, energy=0.546, danceability=0.806 },
C:   { id="spotify:track:1seMsoFYW4dFqTyHgrJeGv"^^com.spotify:song("Sorry"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.764, danceability=0.637 },
C:   { id="spotify:track:0d8jkyht5OV1G5qK1XSOMS"^^com.spotify:song("Baby"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:3ipn9JLAPI5GUEo4y4jcoi"^^com.spotify:artist("Ludacris")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.879, danceability=0.724 },
C:   { id="spotify:track:3jUwj7q1UWu7o87J4E45Zt"^^com.spotify:song("Purpose"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.285, danceability=0.481 },
C:   { id="spotify:track:0j8bKhH7fPCugmewmn5Q9r"^^com.spotify:song("Love Yourself"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.434, danceability=0.786 },
C:   { id="spotify:track:0F99UB5OmeXdzau8srky0h"^^com.spotify:song("Sorry"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.764, danceability=0.637 },
C:   { id="spotify:track:2ZlCGeK30BLRNSPC832pNZ"^^com.spotify:song("Forever (feat. Post Malone & Clever)"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:246dkjvS1zLTtiykXe5h60"^^com.spotify:artist("Post Malone"), "spotify:artist:5yy76ufVriyvidNSvXlRU1"^^com.spotify:artist("Clever")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=78, energy=0.483, danceability=0.825 }
C: ]]
C: #[count=23];
C: now => (sort release_date desc of (@com.spotify.song())), contains(artists, "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")) => notify
C: #[results=[
C:   { id="spotify:track:1seMsoFYW4dFqTyHgrJeGv"^^com.spotify:song("Sorry"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.764, danceability=0.637 },
C:   { id="spotify:track:0d8jkyht5OV1G5qK1XSOMS"^^com.spotify:song("Baby"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:3ipn9JLAPI5GUEo4y4jcoi"^^com.spotify:artist("Ludacris")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.879, danceability=0.724 },
C:   { id="spotify:track:3jUwj7q1UWu7o87J4E45Zt"^^com.spotify:song("Purpose"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.285, danceability=0.481 },
C:   { id="spotify:track:0j8bKhH7fPCugmewmn5Q9r"^^com.spotify:song("Love Yourself"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.434, danceability=0.786 },
C:   { id="spotify:track:0F99UB5OmeXdzau8srky0h"^^com.spotify:song("Sorry"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.764, danceability=0.637 },
C:   { id="spotify:track:4HBZA5flZLE435QTztThqH"^^com.spotify:song("Stuck with U (with Justin Bieber)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-05-08T00:00:00.000Z"), popularity=93, energy=0.45, danceability=0.597 },
C:   { id="spotify:track:4HBZA5flZLE435QTztThqH"^^com.spotify:song("Stuck with U (with Justin Bieber)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-05-08T00:00:00.000Z"), popularity=93, energy=0.45, danceability=0.597 },
C:   { id="spotify:track:4umIPjkehX1r7uhmGvXiSV"^^com.spotify:song("Intentions (feat. Quavo)"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:0VRj0yCOv2FXJNP47XQnx5"^^com.spotify:artist("Quavo")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=87, energy=0.546, danceability=0.806 },
C:   { id="spotify:track:2ZlCGeK30BLRNSPC832pNZ"^^com.spotify:song("Forever (feat. Post Malone & Clever)"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:246dkjvS1zLTtiykXe5h60"^^com.spotify:artist("Post Malone"), "spotify:artist:5yy76ufVriyvidNSvXlRU1"^^com.spotify:artist("Clever")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=78, energy=0.483, danceability=0.825 },
C:   { id="spotify:track:16wAOAZ2OkqoIDN7TpChjR"^^com.spotify:song("Yummy"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=78, energy=0.506, danceability=0.676 }
C: ]]
C: #[count=23];
A: i sorted songs by justin beiber from newest to oldest. would you like me to play these songs ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify.play_song(song=$?)
AT: #[confirm=enum(proposed)];
U: actually, on second thought i rather listen to maroon 5 . can you also play the newest songs first ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song())), contains~(artists, "maroon 5") => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (@com.spotify.song()), contains~(artists, "justin bieber") => notify
C: #[results=[
C:   { id="spotify:track:6rPO02ozF3bM7NnOV4h6s2"^^com.spotify:song("Despacito - Remix"), artists=["spotify:artist:4V8Sr092TqfHkfAA5fXXqG"^^com.spotify:artist("Luis Fonsi"), "spotify:artist:4VMYDCV2IEDYJArk749S6m"^^com.spotify:artist("Daddy Yankee"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2017-04-17T00:00:00.000Z"), popularity=74, energy=0.816, danceability=0.653 },
C:   { id="spotify:track:4HBZA5flZLE435QTztThqH"^^com.spotify:song("Stuck with U (with Justin Bieber)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-05-08T00:00:00.000Z"), popularity=93, energy=0.45, danceability=0.597 },
C:   { id="spotify:track:364dI1bYnvamSnBJ8JcNzN"^^com.spotify:song("Intentions"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:0VRj0yCOv2FXJNP47XQnx5"^^com.spotify:artist("Quavo")], release_date=new Date("2020-02-07T00:00:00.000Z"), popularity=88, energy=0.553, danceability=0.811 },
C:   { id="spotify:track:4umIPjkehX1r7uhmGvXiSV"^^com.spotify:song("Intentions (feat. Quavo)"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:0VRj0yCOv2FXJNP47XQnx5"^^com.spotify:artist("Quavo")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=87, energy=0.546, danceability=0.806 },
C:   { id="spotify:track:1seMsoFYW4dFqTyHgrJeGv"^^com.spotify:song("Sorry"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.764, danceability=0.637 },
C:   { id="spotify:track:0d8jkyht5OV1G5qK1XSOMS"^^com.spotify:song("Baby"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:3ipn9JLAPI5GUEo4y4jcoi"^^com.spotify:artist("Ludacris")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.879, danceability=0.724 },
C:   { id="spotify:track:3jUwj7q1UWu7o87J4E45Zt"^^com.spotify:song("Purpose"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.285, danceability=0.481 },
C:   { id="spotify:track:0j8bKhH7fPCugmewmn5Q9r"^^com.spotify:song("Love Yourself"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.434, danceability=0.786 },
C:   { id="spotify:track:0F99UB5OmeXdzau8srky0h"^^com.spotify:song("Sorry"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.764, danceability=0.637 },
C:   { id="spotify:track:2ZlCGeK30BLRNSPC832pNZ"^^com.spotify:song("Forever (feat. Post Malone & Clever)"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:246dkjvS1zLTtiykXe5h60"^^com.spotify:artist("Post Malone"), "spotify:artist:5yy76ufVriyvidNSvXlRU1"^^com.spotify:artist("Clever")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=78, energy=0.483, danceability=0.825 }
C: ]]
C: #[count=23];
C: now => (sort release_date desc of (@com.spotify.song())), contains(artists, "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")) => notify
C: #[results=[
C:   { id="spotify:track:1seMsoFYW4dFqTyHgrJeGv"^^com.spotify:song("Sorry"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.764, danceability=0.637 },
C:   { id="spotify:track:0d8jkyht5OV1G5qK1XSOMS"^^com.spotify:song("Baby"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:3ipn9JLAPI5GUEo4y4jcoi"^^com.spotify:artist("Ludacris")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.879, danceability=0.724 },
C:   { id="spotify:track:3jUwj7q1UWu7o87J4E45Zt"^^com.spotify:song("Purpose"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.285, danceability=0.481 },
C:   { id="spotify:track:0j8bKhH7fPCugmewmn5Q9r"^^com.spotify:song("Love Yourself"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.434, danceability=0.786 },
C:   { id="spotify:track:0F99UB5OmeXdzau8srky0h"^^com.spotify:song("Sorry"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.764, danceability=0.637 },
C:   { id="spotify:track:4HBZA5flZLE435QTztThqH"^^com.spotify:song("Stuck with U (with Justin Bieber)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-05-08T00:00:00.000Z"), popularity=93, energy=0.45, danceability=0.597 },
C:   { id="spotify:track:4HBZA5flZLE435QTztThqH"^^com.spotify:song("Stuck with U (with Justin Bieber)"), artists=["spotify:artist:66CXWjxzNUsdJxJ2JdwvnR"^^com.spotify:artist("Ariana Grande"), "spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-05-08T00:00:00.000Z"), popularity=93, energy=0.45, danceability=0.597 },
C:   { id="spotify:track:4umIPjkehX1r7uhmGvXiSV"^^com.spotify:song("Intentions (feat. Quavo)"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:0VRj0yCOv2FXJNP47XQnx5"^^com.spotify:artist("Quavo")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=87, energy=0.546, danceability=0.806 },
C:   { id="spotify:track:2ZlCGeK30BLRNSPC832pNZ"^^com.spotify:song("Forever (feat. Post Malone & Clever)"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber"), "spotify:artist:246dkjvS1zLTtiykXe5h60"^^com.spotify:artist("Post Malone"), "spotify:artist:5yy76ufVriyvidNSvXlRU1"^^com.spotify:artist("Clever")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=78, energy=0.483, danceability=0.825 },
C:   { id="spotify:track:16wAOAZ2OkqoIDN7TpChjR"^^com.spotify:song("Yummy"), artists=["spotify:artist:1uNFoZAHBGtllmzznpCI3s"^^com.spotify:artist("Justin Bieber")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=78, energy=0.506, danceability=0.676 }
C: ]]
C: #[count=23];
C: now => (sort release_date desc of (@com.spotify.song())), contains~(artists, "maroon 5") => notify
C: #[results=[
C:   { id="spotify:track:1TyL2CELRDqnQzJ1yTuyvO"^^com.spotify:song("She Will Be Loved - Acoustic"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.491, danceability=0.629 },
C:   { id="spotify:track:4efvJPxZZYEKGA2ZmRmLDv"^^com.spotify:song("Sunday Morning"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.795, danceability=0.604 },
C:   { id="spotify:track:4jozyHBAidza5MDJ8rywp3"^^com.spotify:song("Daylight"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.75, danceability=0.619 },
C:   { id="spotify:track:0hVyF73LaBblBp1jbJ4gMA"^^com.spotify:song("What Lovers Do"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5"), "spotify:artist:7tYKF4w9nC0nq9CsPZTHyP"^^com.spotify:artist("SZA")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.682, danceability=0.768 },
C:   { id="spotify:track:2f2w98DPhjvYRfnVC8fIT5"^^com.spotify:song("Sunday Morning"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.795, danceability=0.604 },
C:   { id="spotify:track:7H9EvxwRcKncjiELAQ73pw"^^com.spotify:song("What Lovers Do"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5"), "spotify:artist:7tYKF4w9nC0nq9CsPZTHyP"^^com.spotify:artist("SZA")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.682, danceability=0.768 },
C:   { id="spotify:track:0EM3LtLVtIKTzMWvdupOB6"^^com.spotify:song("Animals"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.836, danceability=0.398 },
C:   { id="spotify:track:0POXKg1EB7oxAGHuBMPKeV"^^com.spotify:song("Moves Like Jagger - Radio Edit"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5"), "spotify:artist:1l7ZsJRRS8wlW3WfJfPfNS"^^com.spotify:artist("Christina Aguilera")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.79, danceability=0.701 },
C:   { id="spotify:track:6hzRL8BkBGtYPyjAa6H08c"^^com.spotify:song("Makes Me Wonder"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.856, danceability=0.799 },
C:   { id="spotify:track:0I1Hc8me7loZAGDqq7aPX0"^^com.spotify:song("Girls Like You - Cardi B Version"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5"), "spotify:artist:4kYSro6naA4h99UJvo89HB"^^com.spotify:artist("Cardi B")], release_date=new Date("2020-07-17T00:00:00.000Z"), popularity=0, energy=0.581, danceability=0.776 }
C: ]]
C: #[count=20];
A: sure, i've sorted maroon 5's from newest to oldest . should i play these songs ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify.play_song(song=$?)
AT: #[confirm=enum(proposed)];
U: yes, that was very helpful . thanks a lot .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.play_song(song=["spotify:track:2b8fOow8UzyDFAE27YhOZM"^^com.spotify:song("Memories"), "spotify:track:6V1bu6o1Yo5ZXnsCJU8Ovk"^^com.spotify:song("Girls Like You (feat. Cardi B)"), "spotify:track:2j5hsQvApottzvTn4pFJWF"^^com.spotify:song("What Lovers Do (feat. SZA)"), "spotify:track:1nueTG77MzNkJTKQ0ZdGzT"^^com.spotify:song("Don't Wanna Know (feat. Kendrick Lamar)"), "spotify:track:6AvfZXpbb6r35DfF7gHPRq"^^com.spotify:song("Wait"), "spotify:track:6OEHjJJvdkk1Ln0p0AZdyz"^^com.spotify:song("Girls Like You"), "spotify:track:7gwLQ4tZ5UdZ7qNcDyJ8wr"^^com.spotify:song("Cold (feat. Future)"), "spotify:track:6FRLCMO5TUHTexlWo8ym1W"^^com.spotify:song("Girls Like You (feat. Cardi B)"), "spotify:track:2iuZJX9X9P0GKaE93xcPjk"^^com.spotify:song("Sugar"), "spotify:track:4gbVRS8gloEluzf0GzDOFc"^^com.spotify:song("Maps")]);
====
# 9
U: can you get the songs that are best to dance to from 2000 to 2005 ?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort danceability desc of (@com.spotify.song())), (release_date >= new Date("2000-01-01T08:00:00.000Z") && release_date <= new Date("2005-12-31T08:00:00.000Z")) => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (sort danceability desc of (@com.spotify.song())), (release_date >= new Date("2000-01-01T08:00:00.000Z") && release_date <= new Date("2005-12-31T08:00:00.000Z")) => notify
C: #[results=[
C:   { id="spotify:track:7lQ8MOhq6IN2w8EYcFNSUk"^^com.spotify:song("Without Me"), artists=["spotify:artist:7dGJo4pcD2V6oG8kP0tJRR"^^com.spotify:artist("Eminem")], release_date=new Date("2002-05-26T00:00:00.000Z"), popularity=82, energy=0.669, danceability=0.908 },
C:   { id="spotify:track:5rb9QrpfcKFHM1EUbSIurX"^^com.spotify:song("Yeah! (feat. Lil Jon & Ludacris)"), artists=["spotify:artist:23zg3TcAtWQy7J6upgbUnj"^^com.spotify:artist("Usher"), "spotify:artist:7sfl4Xt5KmfyDs2T3SVSMK"^^com.spotify:artist("Lil Jon"), "spotify:artist:3ipn9JLAPI5GUEo4y4jcoi"^^com.spotify:artist("Ludacris")], release_date=new Date("2004-03-23T00:00:00.000Z"), popularity=80, energy=0.791, danceability=0.894 },
C:   { id="spotify:track:0I3q5fE6wg7LIfHGngUTnV"^^com.spotify:song("Ms. Jackson"), artists=["spotify:artist:1G9G7WwrXka3Z1r7aIDjI7"^^com.spotify:artist("OutKast")], release_date=new Date("2000-10-31T00:00:00.000Z"), popularity=79, energy=0.805, danceability=0.843 },
C:   { id="spotify:track:0d28khcov6AiegSCpG5TuT"^^com.spotify:song("Feel Good Inc."), artists=["spotify:artist:3AA28KZvwAUcZuOKwyblJQ"^^com.spotify:artist("Gorillaz")], release_date=new Date("2005-05-23T00:00:00.000Z"), popularity=80, energy=0.705, danceability=0.818 },
C:   { id="spotify:track:3ZFTkvIE7kyPt6Nu3PEa7V"^^com.spotify:song("Hips Don't Lie (feat. Wyclef Jean)"), artists=["spotify:artist:0EmeFodog0BfCgMzAIvKQp"^^com.spotify:artist("Shakira"), "spotify:artist:7aBzpmFXB4WWpPl2F7RjBe"^^com.spotify:artist("Wyclef Jean")], release_date=new Date("2005-11-28T00:00:00.000Z"), popularity=82, energy=0.824, danceability=0.778 },
C:   { id="spotify:track:7i6r9KotUPQg3ozKKgEPIN"^^com.spotify:song("Seven Nation Army"), artists=["spotify:artist:4F84IBURUo98rz4r61KF70"^^com.spotify:artist("The White Stripes")], release_date=new Date("2003-04-01T00:00:00.000Z"), popularity=73, energy=0.463, danceability=0.737 },
C:   { id="spotify:track:2PpruBYCo4H7WOBJ7Q2EwM"^^com.spotify:song("Hey Ya! - Radio Mix"), artists=["spotify:artist:1G9G7WwrXka3Z1r7aIDjI7"^^com.spotify:artist("OutKast")], release_date=new Date("2003-01-01T00:00:00.000Z"), popularity=79, energy=0.974, danceability=0.728 },
C:   { id="spotify:track:6ECp64rv50XVz93WvxXMGF"^^com.spotify:song("This Love"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2002-01-01T00:00:00.000Z"), popularity=77, energy=0.862, danceability=0.712 },
C:   { id="spotify:track:4RCWB3V8V0dignt99LZ8vH"^^com.spotify:song("Hey There Delilah"), artists=["spotify:artist:1g1yxsNVPhMUl9GrMjEb2o"^^com.spotify:artist("Plain White T's")], release_date=new Date("2005-01-01T00:00:00.000Z"), popularity=79, energy=0.291, danceability=0.656 },
C:   { id="spotify:track:2MLHyLy5z5l5YRp7momlgw"^^com.spotify:song("Island In The Sun"), artists=["spotify:artist:3jOstUTkEu2JkjvRdBA5Gu"^^com.spotify:artist("Weezer")], release_date=new Date("2001-05-15T00:00:00.000Z"), popularity=77, energy=0.81, danceability=0.654 }
C: ]]
C: #[count=21];
A: i found songs from 2000 to 2005 and then sorted by danceability . should i play these songs ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify.play_song(song=$?)
AT: #[confirm=enum(proposed)];
U: no , but can you list like 3 of them out .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort danceability desc of (@com.spotify.song())), (release_date >= new Date("2000-01-01T08:00:00.000Z") && release_date <= new Date("2005-12-31T08:00:00.000Z")) => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (sort danceability desc of (@com.spotify.song())), (release_date >= new Date("2000-01-01T08:00:00.000Z") && release_date <= new Date("2005-12-31T08:00:00.000Z")) => notify
C: #[results=[
C:   { id="spotify:track:7lQ8MOhq6IN2w8EYcFNSUk"^^com.spotify:song("Without Me"), artists=["spotify:artist:7dGJo4pcD2V6oG8kP0tJRR"^^com.spotify:artist("Eminem")], release_date=new Date("2002-05-26T00:00:00.000Z"), popularity=82, energy=0.669, danceability=0.908 },
C:   { id="spotify:track:5rb9QrpfcKFHM1EUbSIurX"^^com.spotify:song("Yeah! (feat. Lil Jon & Ludacris)"), artists=["spotify:artist:23zg3TcAtWQy7J6upgbUnj"^^com.spotify:artist("Usher"), "spotify:artist:7sfl4Xt5KmfyDs2T3SVSMK"^^com.spotify:artist("Lil Jon"), "spotify:artist:3ipn9JLAPI5GUEo4y4jcoi"^^com.spotify:artist("Ludacris")], release_date=new Date("2004-03-23T00:00:00.000Z"), popularity=80, energy=0.791, danceability=0.894 },
C:   { id="spotify:track:0I3q5fE6wg7LIfHGngUTnV"^^com.spotify:song("Ms. Jackson"), artists=["spotify:artist:1G9G7WwrXka3Z1r7aIDjI7"^^com.spotify:artist("OutKast")], release_date=new Date("2000-10-31T00:00:00.000Z"), popularity=79, energy=0.805, danceability=0.843 },
C:   { id="spotify:track:0d28khcov6AiegSCpG5TuT"^^com.spotify:song("Feel Good Inc."), artists=["spotify:artist:3AA28KZvwAUcZuOKwyblJQ"^^com.spotify:artist("Gorillaz")], release_date=new Date("2005-05-23T00:00:00.000Z"), popularity=80, energy=0.705, danceability=0.818 },
C:   { id="spotify:track:3ZFTkvIE7kyPt6Nu3PEa7V"^^com.spotify:song("Hips Don't Lie (feat. Wyclef Jean)"), artists=["spotify:artist:0EmeFodog0BfCgMzAIvKQp"^^com.spotify:artist("Shakira"), "spotify:artist:7aBzpmFXB4WWpPl2F7RjBe"^^com.spotify:artist("Wyclef Jean")], release_date=new Date("2005-11-28T00:00:00.000Z"), popularity=82, energy=0.824, danceability=0.778 },
C:   { id="spotify:track:7i6r9KotUPQg3ozKKgEPIN"^^com.spotify:song("Seven Nation Army"), artists=["spotify:artist:4F84IBURUo98rz4r61KF70"^^com.spotify:artist("The White Stripes")], release_date=new Date("2003-04-01T00:00:00.000Z"), popularity=73, energy=0.463, danceability=0.737 },
C:   { id="spotify:track:2PpruBYCo4H7WOBJ7Q2EwM"^^com.spotify:song("Hey Ya! - Radio Mix"), artists=["spotify:artist:1G9G7WwrXka3Z1r7aIDjI7"^^com.spotify:artist("OutKast")], release_date=new Date("2003-01-01T00:00:00.000Z"), popularity=79, energy=0.974, danceability=0.728 },
C:   { id="spotify:track:6ECp64rv50XVz93WvxXMGF"^^com.spotify:song("This Love"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2002-01-01T00:00:00.000Z"), popularity=77, energy=0.862, danceability=0.712 },
C:   { id="spotify:track:4RCWB3V8V0dignt99LZ8vH"^^com.spotify:song("Hey There Delilah"), artists=["spotify:artist:1g1yxsNVPhMUl9GrMjEb2o"^^com.spotify:artist("Plain White T's")], release_date=new Date("2005-01-01T00:00:00.000Z"), popularity=79, energy=0.291, danceability=0.656 },
C:   { id="spotify:track:2MLHyLy5z5l5YRp7momlgw"^^com.spotify:song("Island In The Sun"), artists=["spotify:artist:3jOstUTkEu2JkjvRdBA5Gu"^^com.spotify:artist("Weezer")], release_date=new Date("2001-05-15T00:00:00.000Z"), popularity=77, energy=0.81, danceability=0.654 }
C: ]]
C: #[count=21];
C: now => (sort danceability desc of (@com.spotify.song())), (release_date >= new Date("2000-01-01T08:00:00.000Z") && release_date <= new Date("2005-12-31T08:00:00.000Z")) => notify
C: #[results=[
C:   { id="spotify:track:7lQ8MOhq6IN2w8EYcFNSUk"^^com.spotify:song("Without Me"), artists=["spotify:artist:7dGJo4pcD2V6oG8kP0tJRR"^^com.spotify:artist("Eminem")], release_date=new Date("2002-05-26T00:00:00.000Z"), popularity=82, energy=0.669, danceability=0.908 },
C:   { id="spotify:track:5rb9QrpfcKFHM1EUbSIurX"^^com.spotify:song("Yeah! (feat. Lil Jon & Ludacris)"), artists=["spotify:artist:23zg3TcAtWQy7J6upgbUnj"^^com.spotify:artist("Usher"), "spotify:artist:7sfl4Xt5KmfyDs2T3SVSMK"^^com.spotify:artist("Lil Jon"), "spotify:artist:3ipn9JLAPI5GUEo4y4jcoi"^^com.spotify:artist("Ludacris")], release_date=new Date("2004-03-23T00:00:00.000Z"), popularity=80, energy=0.791, danceability=0.894 },
C:   { id="spotify:track:0I3q5fE6wg7LIfHGngUTnV"^^com.spotify:song("Ms. Jackson"), artists=["spotify:artist:1G9G7WwrXka3Z1r7aIDjI7"^^com.spotify:artist("OutKast")], release_date=new Date("2000-10-31T00:00:00.000Z"), popularity=79, energy=0.805, danceability=0.843 },
C:   { id="spotify:track:0d28khcov6AiegSCpG5TuT"^^com.spotify:song("Feel Good Inc."), artists=["spotify:artist:3AA28KZvwAUcZuOKwyblJQ"^^com.spotify:artist("Gorillaz")], release_date=new Date("2005-05-23T00:00:00.000Z"), popularity=80, energy=0.705, danceability=0.818 },
C:   { id="spotify:track:3ZFTkvIE7kyPt6Nu3PEa7V"^^com.spotify:song("Hips Don't Lie (feat. Wyclef Jean)"), artists=["spotify:artist:0EmeFodog0BfCgMzAIvKQp"^^com.spotify:artist("Shakira"), "spotify:artist:7aBzpmFXB4WWpPl2F7RjBe"^^com.spotify:artist("Wyclef Jean")], release_date=new Date("2005-11-28T00:00:00.000Z"), popularity=82, energy=0.824, danceability=0.778 },
C:   { id="spotify:track:7i6r9KotUPQg3ozKKgEPIN"^^com.spotify:song("Seven Nation Army"), artists=["spotify:artist:4F84IBURUo98rz4r61KF70"^^com.spotify:artist("The White Stripes")], release_date=new Date("2003-04-01T00:00:00.000Z"), popularity=73, energy=0.463, danceability=0.737 },
C:   { id="spotify:track:2PpruBYCo4H7WOBJ7Q2EwM"^^com.spotify:song("Hey Ya! - Radio Mix"), artists=["spotify:artist:1G9G7WwrXka3Z1r7aIDjI7"^^com.spotify:artist("OutKast")], release_date=new Date("2003-01-01T00:00:00.000Z"), popularity=79, energy=0.974, danceability=0.728 },
C:   { id="spotify:track:6ECp64rv50XVz93WvxXMGF"^^com.spotify:song("This Love"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2002-01-01T00:00:00.000Z"), popularity=77, energy=0.862, danceability=0.712 },
C:   { id="spotify:track:4RCWB3V8V0dignt99LZ8vH"^^com.spotify:song("Hey There Delilah"), artists=["spotify:artist:1g1yxsNVPhMUl9GrMjEb2o"^^com.spotify:artist("Plain White T's")], release_date=new Date("2005-01-01T00:00:00.000Z"), popularity=79, energy=0.291, danceability=0.656 },
C:   { id="spotify:track:2MLHyLy5z5l5YRp7momlgw"^^com.spotify:song("Island In The Sun"), artists=["spotify:artist:3jOstUTkEu2JkjvRdBA5Gu"^^com.spotify:artist("Weezer")], release_date=new Date("2001-05-15T00:00:00.000Z"), popularity=77, energy=0.81, danceability=0.654 }
C: ]]
C: #[count=21];
A: i found without me by eminem, yeah! (feat. lil jon & ludacris) by usher, lil jon, and ludacris, and ms. jackson by outkast . is there anything else i can help you with ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_anything_else;
U: can you play without me by eminem .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.play_song(song="spotify:track:7lQ8MOhq6IN2w8EYcFNSUk"^^com.spotify:song("Without Me"));
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (sort danceability desc of (@com.spotify.song())), (release_date >= new Date("2000-01-01T08:00:00.000Z") && release_date <= new Date("2005-12-31T08:00:00.000Z")) => notify
C: #[results=[
C:   { id="spotify:track:7lQ8MOhq6IN2w8EYcFNSUk"^^com.spotify:song("Without Me"), artists=["spotify:artist:7dGJo4pcD2V6oG8kP0tJRR"^^com.spotify:artist("Eminem")], release_date=new Date("2002-05-26T00:00:00.000Z"), popularity=82, energy=0.669, danceability=0.908 },
C:   { id="spotify:track:5rb9QrpfcKFHM1EUbSIurX"^^com.spotify:song("Yeah! (feat. Lil Jon & Ludacris)"), artists=["spotify:artist:23zg3TcAtWQy7J6upgbUnj"^^com.spotify:artist("Usher"), "spotify:artist:7sfl4Xt5KmfyDs2T3SVSMK"^^com.spotify:artist("Lil Jon"), "spotify:artist:3ipn9JLAPI5GUEo4y4jcoi"^^com.spotify:artist("Ludacris")], release_date=new Date("2004-03-23T00:00:00.000Z"), popularity=80, energy=0.791, danceability=0.894 },
C:   { id="spotify:track:0I3q5fE6wg7LIfHGngUTnV"^^com.spotify:song("Ms. Jackson"), artists=["spotify:artist:1G9G7WwrXka3Z1r7aIDjI7"^^com.spotify:artist("OutKast")], release_date=new Date("2000-10-31T00:00:00.000Z"), popularity=79, energy=0.805, danceability=0.843 },
C:   { id="spotify:track:0d28khcov6AiegSCpG5TuT"^^com.spotify:song("Feel Good Inc."), artists=["spotify:artist:3AA28KZvwAUcZuOKwyblJQ"^^com.spotify:artist("Gorillaz")], release_date=new Date("2005-05-23T00:00:00.000Z"), popularity=80, energy=0.705, danceability=0.818 },
C:   { id="spotify:track:3ZFTkvIE7kyPt6Nu3PEa7V"^^com.spotify:song("Hips Don't Lie (feat. Wyclef Jean)"), artists=["spotify:artist:0EmeFodog0BfCgMzAIvKQp"^^com.spotify:artist("Shakira"), "spotify:artist:7aBzpmFXB4WWpPl2F7RjBe"^^com.spotify:artist("Wyclef Jean")], release_date=new Date("2005-11-28T00:00:00.000Z"), popularity=82, energy=0.824, danceability=0.778 },
C:   { id="spotify:track:7i6r9KotUPQg3ozKKgEPIN"^^com.spotify:song("Seven Nation Army"), artists=["spotify:artist:4F84IBURUo98rz4r61KF70"^^com.spotify:artist("The White Stripes")], release_date=new Date("2003-04-01T00:00:00.000Z"), popularity=73, energy=0.463, danceability=0.737 },
C:   { id="spotify:track:2PpruBYCo4H7WOBJ7Q2EwM"^^com.spotify:song("Hey Ya! - Radio Mix"), artists=["spotify:artist:1G9G7WwrXka3Z1r7aIDjI7"^^com.spotify:artist("OutKast")], release_date=new Date("2003-01-01T00:00:00.000Z"), popularity=79, energy=0.974, danceability=0.728 },
C:   { id="spotify:track:6ECp64rv50XVz93WvxXMGF"^^com.spotify:song("This Love"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2002-01-01T00:00:00.000Z"), popularity=77, energy=0.862, danceability=0.712 },
C:   { id="spotify:track:4RCWB3V8V0dignt99LZ8vH"^^com.spotify:song("Hey There Delilah"), artists=["spotify:artist:1g1yxsNVPhMUl9GrMjEb2o"^^com.spotify:artist("Plain White T's")], release_date=new Date("2005-01-01T00:00:00.000Z"), popularity=79, energy=0.291, danceability=0.656 },
C:   { id="spotify:track:2MLHyLy5z5l5YRp7momlgw"^^com.spotify:song("Island In The Sun"), artists=["spotify:artist:3jOstUTkEu2JkjvRdBA5Gu"^^com.spotify:artist("Weezer")], release_date=new Date("2001-05-15T00:00:00.000Z"), popularity=77, energy=0.81, danceability=0.654 }
C: ]]
C: #[count=21];
C: now => (sort danceability desc of (@com.spotify.song())), (release_date >= new Date("2000-01-01T08:00:00.000Z") && release_date <= new Date("2005-12-31T08:00:00.000Z")) => notify
C: #[results=[
C:   { id="spotify:track:7lQ8MOhq6IN2w8EYcFNSUk"^^com.spotify:song("Without Me"), artists=["spotify:artist:7dGJo4pcD2V6oG8kP0tJRR"^^com.spotify:artist("Eminem")], release_date=new Date("2002-05-26T00:00:00.000Z"), popularity=82, energy=0.669, danceability=0.908 },
C:   { id="spotify:track:5rb9QrpfcKFHM1EUbSIurX"^^com.spotify:song("Yeah! (feat. Lil Jon & Ludacris)"), artists=["spotify:artist:23zg3TcAtWQy7J6upgbUnj"^^com.spotify:artist("Usher"), "spotify:artist:7sfl4Xt5KmfyDs2T3SVSMK"^^com.spotify:artist("Lil Jon"), "spotify:artist:3ipn9JLAPI5GUEo4y4jcoi"^^com.spotify:artist("Ludacris")], release_date=new Date("2004-03-23T00:00:00.000Z"), popularity=80, energy=0.791, danceability=0.894 },
C:   { id="spotify:track:0I3q5fE6wg7LIfHGngUTnV"^^com.spotify:song("Ms. Jackson"), artists=["spotify:artist:1G9G7WwrXka3Z1r7aIDjI7"^^com.spotify:artist("OutKast")], release_date=new Date("2000-10-31T00:00:00.000Z"), popularity=79, energy=0.805, danceability=0.843 },
C:   { id="spotify:track:0d28khcov6AiegSCpG5TuT"^^com.spotify:song("Feel Good Inc."), artists=["spotify:artist:3AA28KZvwAUcZuOKwyblJQ"^^com.spotify:artist("Gorillaz")], release_date=new Date("2005-05-23T00:00:00.000Z"), popularity=80, energy=0.705, danceability=0.818 },
C:   { id="spotify:track:3ZFTkvIE7kyPt6Nu3PEa7V"^^com.spotify:song("Hips Don't Lie (feat. Wyclef Jean)"), artists=["spotify:artist:0EmeFodog0BfCgMzAIvKQp"^^com.spotify:artist("Shakira"), "spotify:artist:7aBzpmFXB4WWpPl2F7RjBe"^^com.spotify:artist("Wyclef Jean")], release_date=new Date("2005-11-28T00:00:00.000Z"), popularity=82, energy=0.824, danceability=0.778 },
C:   { id="spotify:track:7i6r9KotUPQg3ozKKgEPIN"^^com.spotify:song("Seven Nation Army"), artists=["spotify:artist:4F84IBURUo98rz4r61KF70"^^com.spotify:artist("The White Stripes")], release_date=new Date("2003-04-01T00:00:00.000Z"), popularity=73, energy=0.463, danceability=0.737 },
C:   { id="spotify:track:2PpruBYCo4H7WOBJ7Q2EwM"^^com.spotify:song("Hey Ya! - Radio Mix"), artists=["spotify:artist:1G9G7WwrXka3Z1r7aIDjI7"^^com.spotify:artist("OutKast")], release_date=new Date("2003-01-01T00:00:00.000Z"), popularity=79, energy=0.974, danceability=0.728 },
C:   { id="spotify:track:6ECp64rv50XVz93WvxXMGF"^^com.spotify:song("This Love"), artists=["spotify:artist:04gDigrS5kc9YWfZHwBETP"^^com.spotify:artist("Maroon 5")], release_date=new Date("2002-01-01T00:00:00.000Z"), popularity=77, energy=0.862, danceability=0.712 },
C:   { id="spotify:track:4RCWB3V8V0dignt99LZ8vH"^^com.spotify:song("Hey There Delilah"), artists=["spotify:artist:1g1yxsNVPhMUl9GrMjEb2o"^^com.spotify:artist("Plain White T's")], release_date=new Date("2005-01-01T00:00:00.000Z"), popularity=79, energy=0.291, danceability=0.656 },
C:   { id="spotify:track:2MLHyLy5z5l5YRp7momlgw"^^com.spotify:song("Island In The Sun"), artists=["spotify:artist:3jOstUTkEu2JkjvRdBA5Gu"^^com.spotify:artist("Weezer")], release_date=new Date("2001-05-15T00:00:00.000Z"), popularity=77, energy=0.81, danceability=0.654 }
C: ]]
C: #[count=21];
C: now => @com.spotify.play_song(song="spotify:track:7lQ8MOhq6IN2w8EYcFNSUk"^^com.spotify:song("Without Me"))
C: #[results=[
C: ]];
A: sure, consider that done .
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_action_success;
U: alright, thanks .
UT: $dialogue @org.thingpedia.dialogue.transaction.cancel;
====
# 3
U: play me some taylor swift songs .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
A: there are many songs by taylor swift . what type of taylor swift song would you like ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_generic_search_question;
U: i don't like her new songs , can you play her oldest songs .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date asc of (@com.spotify.song())), contains~(artists, "taylor swift") => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => (sort release_date asc of (@com.spotify.song())), contains~(artists, "taylor swift") => notify
C: #[results=[
C:   { id="spotify:track:15DeqWWQB4dcEWzJg15VrN"^^com.spotify:song("Our Song"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], release_date=new Date("2006-10-24T00:00:00.000Z"), popularity=65, energy=0.672, danceability=0.668 },
C:   { id="spotify:track:1vrd6UOGamcKNGnSHJQlSt"^^com.spotify:song("Love Story"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], release_date=new Date("2008-11-11T00:00:00.000Z"), popularity=68, energy=0.741, danceability=0.618 },
C:   { id="spotify:track:3GCL1PydwsLodcpv0Ll1ch"^^com.spotify:song("You Belong With Me"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], release_date=new Date("2008-11-11T00:00:00.000Z"), popularity=67, energy=0.783, danceability=0.687 },
C:   { id="spotify:track:72jCZdH0Lhg93z6Z4hBjgj"^^com.spotify:song("I Knew You Were Trouble."), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], release_date=new Date("2012-10-22T00:00:00.000Z"), popularity=66, energy=0.469, danceability=0.622 },
C:   { id="spotify:track:1p80LdxRV74UKvL8gnD7ky"^^com.spotify:song("Blank Space"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], release_date=new Date("2014-10-27T00:00:00.000Z"), popularity=71, energy=0.678, danceability=0.752 },
C:   { id="spotify:track:5xTtaWoae3wi06K5WfVUUH"^^com.spotify:song("Shake It Off"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], release_date=new Date("2014-10-27T00:00:00.000Z"), popularity=70, energy=0.785, danceability=0.648 },
C:   { id="spotify:track:59HjlYCeBsxdI0fcm3zglw"^^com.spotify:song("Wildest Dreams"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], release_date=new Date("2014-10-27T00:00:00.000Z"), popularity=68, energy=0.664, danceability=0.553 },
C:   { id="spotify:track:273dCMFseLcVsoSWx59IoE"^^com.spotify:song("Bad Blood"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], release_date=new Date("2014-10-27T00:00:00.000Z"), popularity=64, energy=0.802, danceability=0.652 },
C:   { id="spotify:track:6NFyWDv5CjfwuzoCkw47Xf"^^com.spotify:song("Delicate"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], release_date=new Date("2017-11-10T00:00:00.000Z"), popularity=76, energy=0.404, danceability=0.75 },
C:   { id="spotify:track:1P17dC1amhFzptugyAO7Il"^^com.spotify:song("Look What You Made Me Do"), artists=["spotify:artist:06HL4z0CvFAxyc27GXpf02"^^com.spotify:artist("Taylor Swift")], release_date=new Date("2017-11-10T00:00:00.000Z"), popularity=75, energy=0.709, danceability=0.766 }
C: ]]
C: #[count=20];
A: i sorted taylor swift songs from oldest to newest . would you like me to play these songs ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify.play_song(song=$?);
U: yes, thank you for your help.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.play_song(song=["spotify:track:15DeqWWQB4dcEWzJg15VrN"^^com.spotify:song("Our Song"), "spotify:track:1vrd6UOGamcKNGnSHJQlSt"^^com.spotify:song("Love Story"), "spotify:track:3GCL1PydwsLodcpv0Ll1ch"^^com.spotify:song("You Belong With Me"), "spotify:track:72jCZdH0Lhg93z6Z4hBjgj"^^com.spotify:song("I Knew You Were Trouble."), "spotify:track:1p80LdxRV74UKvL8gnD7ky"^^com.spotify:song("Blank Space"), "spotify:track:5xTtaWoae3wi06K5WfVUUH"^^com.spotify:song("Shake It Off"), "spotify:track:59HjlYCeBsxdI0fcm3zglw"^^com.spotify:song("Wildest Dreams"), "spotify:track:273dCMFseLcVsoSWx59IoE"^^com.spotify:song("Bad Blood"), "spotify:track:6NFyWDv5CjfwuzoCkw47Xf"^^com.spotify:song("Delicate"), "spotify:track:1P17dC1amhFzptugyAO7Il"^^com.spotify:song("Look What You Made Me Do")]);
====
# 4
U: hi, i want to play some music .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song() => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => @com.spotify.song() => notify
C: #[results=[
C:   { id="spotify:track:7qwt4xUIqQWCu1DJf96g2k"^^com.spotify:song("Hello?"), artists=["spotify:artist:3l0CmX0FuQjFxr8SK7Vqag"^^com.spotify:artist("Clairo"), "spotify:artist:3lLHpTOJ11tWiUNGYN14gt"^^com.spotify:artist("Rejjie Snow")], release_date=new Date("2018-05-25T00:00:00.000Z"), popularity=74, energy=47, danceability=83 },
C:   { id="spotify:track:4sPmO7WMQUAf45kwMOtONw"^^com.spotify:song("Hello"), artists=["spotify:artist:4dpARuHxo51G3z768sgnrY"^^com.spotify:artist("Adele")], release_date=new Date("2016-06-24T00:00:00.000Z"), popularity=71, energy=45, danceability=48 },
C:   { id="spotify:track:7a2IJHzw9WJjoknwdnCop0"^^com.spotify:song("hello!"), artists=["spotify:artist:1dy5WNgIKQU6ezkpZs4y8z"^^com.spotify:artist("ROLE MODEL")], release_date=new Date("2019-11-13T00:00:00.000Z"), popularity=63, energy=46, danceability=79 },
C:   { id="spotify:track:2c62Xf5Po1YSa1N6LOjPHy"^^com.spotify:song("Hello My Old Heart"), artists=["spotify:artist:3Fe3pszR2t4TOBVz41B1WR"^^com.spotify:artist("The Oh Hellos")], release_date=new Date("2011-12-01T00:00:00.000Z"), popularity=64, energy=29, danceability=55 },
C:   { id="spotify:track:1p61zyWNtBhbbAFzg4HUiq"^^com.spotify:song("Hello Beautiful"), artists=["spotify:artist:1qDDkysTxJvFandHwP9CMx"^^com.spotify:artist("Noah Schnacky")], release_date=new Date("2018-01-27T00:00:00.000Z"), popularity=63, energy=47, danceability=50 },
C:   { id="spotify:track:0mHyWYXmmCB9iQyK18m3FQ"^^com.spotify:song("Hello"), artists=["spotify:artist:3gMaNLQm7D9MornNILzdSl"^^com.spotify:artist("Lionel Richie")], release_date=new Date("1983-01-01T00:00:00.000Z"), popularity=59, energy=24, danceability=48 },
C:   { id="spotify:track:30Chv2SmIry70YwtmtaKnj"^^com.spotify:song("Hello"), artists=["spotify:artist:6l3HvQ5sa6mXTsMTB19rO5"^^com.spotify:artist("J. Cole")], release_date=new Date("2014-12-09T00:00:00.000Z"), popularity=59, energy=7, danceability=63 },
C:   { id="spotify:track:6vmAgl2y9MpoZKrVUXrPe5"^^com.spotify:song("Hello Darlin'"), artists=["spotify:artist:7gi3jmwpUpNWdswT8eEprF"^^com.spotify:artist("Conway Twitty")], release_date=new Date("1970-03-23T00:00:00.000Z"), popularity=60, energy=23, danceability=27 },
C:   { id="spotify:track:7bza6R254w7hZyNO9zaIxc"^^com.spotify:song("Hello"), artists=["spotify:artist:5jZeLexrrwGNUy6nv7tzdr"^^com.spotify:artist("C4C"), "spotify:artist:1uJZwuCV2hXbQDSdJvj198"^^com.spotify:artist("kokoro")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=61, energy=21, danceability=64 },
C:   { id="spotify:track:0vZ97gHhemKm6c64hTfJNA"^^com.spotify:song("Hello, Goodbye - Remastered 2009"), artists=["spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^com.spotify:artist("The Beatles")], release_date=new Date("1967-11-27T00:00:00.000Z"), popularity=65, energy=73, danceability=47 }
C: ]]
C: #[count=50]
C: #[more=true];
A: what type of music would you like .
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_generic_search_question;
U: do you have anything energetic , i'm feeling awfully tired this morning .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort energy desc of (@com.spotify.song()) => notify;
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => @com.spotify.song() => notify
C: #[results=[
C:   { id="spotify:track:7qwt4xUIqQWCu1DJf96g2k"^^com.spotify:song("Hello?"), artists=["spotify:artist:3l0CmX0FuQjFxr8SK7Vqag"^^com.spotify:artist("Clairo"), "spotify:artist:3lLHpTOJ11tWiUNGYN14gt"^^com.spotify:artist("Rejjie Snow")], release_date=new Date("2018-05-25T00:00:00.000Z"), popularity=74, energy=47, danceability=83 },
C:   { id="spotify:track:4sPmO7WMQUAf45kwMOtONw"^^com.spotify:song("Hello"), artists=["spotify:artist:4dpARuHxo51G3z768sgnrY"^^com.spotify:artist("Adele")], release_date=new Date("2016-06-24T00:00:00.000Z"), popularity=71, energy=45, danceability=48 },
C:   { id="spotify:track:7a2IJHzw9WJjoknwdnCop0"^^com.spotify:song("hello!"), artists=["spotify:artist:1dy5WNgIKQU6ezkpZs4y8z"^^com.spotify:artist("ROLE MODEL")], release_date=new Date("2019-11-13T00:00:00.000Z"), popularity=63, energy=46, danceability=79 },
C:   { id="spotify:track:2c62Xf5Po1YSa1N6LOjPHy"^^com.spotify:song("Hello My Old Heart"), artists=["spotify:artist:3Fe3pszR2t4TOBVz41B1WR"^^com.spotify:artist("The Oh Hellos")], release_date=new Date("2011-12-01T00:00:00.000Z"), popularity=64, energy=29, danceability=55 },
C:   { id="spotify:track:1p61zyWNtBhbbAFzg4HUiq"^^com.spotify:song("Hello Beautiful"), artists=["spotify:artist:1qDDkysTxJvFandHwP9CMx"^^com.spotify:artist("Noah Schnacky")], release_date=new Date("2018-01-27T00:00:00.000Z"), popularity=63, energy=47, danceability=50 },
C:   { id="spotify:track:0mHyWYXmmCB9iQyK18m3FQ"^^com.spotify:song("Hello"), artists=["spotify:artist:3gMaNLQm7D9MornNILzdSl"^^com.spotify:artist("Lionel Richie")], release_date=new Date("1983-01-01T00:00:00.000Z"), popularity=59, energy=24, danceability=48 },
C:   { id="spotify:track:30Chv2SmIry70YwtmtaKnj"^^com.spotify:song("Hello"), artists=["spotify:artist:6l3HvQ5sa6mXTsMTB19rO5"^^com.spotify:artist("J. Cole")], release_date=new Date("2014-12-09T00:00:00.000Z"), popularity=59, energy=7, danceability=63 },
C:   { id="spotify:track:6vmAgl2y9MpoZKrVUXrPe5"^^com.spotify:song("Hello Darlin'"), artists=["spotify:artist:7gi3jmwpUpNWdswT8eEprF"^^com.spotify:artist("Conway Twitty")], release_date=new Date("1970-03-23T00:00:00.000Z"), popularity=60, energy=23, danceability=27 },
C:   { id="spotify:track:7bza6R254w7hZyNO9zaIxc"^^com.spotify:song("Hello"), artists=["spotify:artist:5jZeLexrrwGNUy6nv7tzdr"^^com.spotify:artist("C4C"), "spotify:artist:1uJZwuCV2hXbQDSdJvj198"^^com.spotify:artist("kokoro")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=61, energy=21, danceability=64 },
C:   { id="spotify:track:0vZ97gHhemKm6c64hTfJNA"^^com.spotify:song("Hello, Goodbye - Remastered 2009"), artists=["spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^com.spotify:artist("The Beatles")], release_date=new Date("1967-11-27T00:00:00.000Z"), popularity=65, energy=73, danceability=47 }
C: ]]
C: #[count=50]
C: #[more=true];
C: now => sort energy desc of (@com.spotify.song()) => notify
C: #[results=[
C:   { id="spotify:track:0G21yYKMZoHa30cYVi1iA8"^^com.spotify:song("Welcome To The Jungle"), artists=["spotify:artist:3qm84nBOXUEQ2vnTfUTTFC"^^com.spotify:artist("Guns N' Roses")], release_date=new Date("1987-07-21T00:00:00.000Z"), popularity=72, energy=98, danceability=45 },
C:   { id="spotify:track:7snQQk1zcKl8gZ92AnueZW"^^com.spotify:song("Sweet Child O' Mine"), artists=["spotify:artist:3qm84nBOXUEQ2vnTfUTTFC"^^com.spotify:artist("Guns N' Roses")], release_date=new Date("1987-07-21T00:00:00.000Z"), popularity=74, energy=95, danceability=44 },
C:   { id="spotify:track:5zA8vzDGqPl2AzZkEYQGKh"^^com.spotify:song("Uptown Girl"), artists=["spotify:artist:6zFYqv1mOsgBRQbae3JJ9e"^^com.spotify:artist("Billy Joel")], release_date=new Date("1983-08-08T00:00:00.000Z"), popularity=77, energy=94, danceability=70 },
C:   { id="spotify:track:4xh7W7tlNMIczFhupCPniY"^^com.spotify:song("Go Your Own Way - 2004 Remaster"), artists=["spotify:artist:08GQAI4eElDnROBrJRGE0X"^^com.spotify:artist("Fleetwood Mac")], release_date=new Date("1977-02-04T00:00:00.000Z"), popularity=74, energy=94, danceability=58 },
C:   { id="spotify:track:0YEg2JfkMeJ1hTYqop4A5o"^^com.spotify:song("7 Rings"), artists=["spotify:artist:00YTqRClk82aMchQQpYMd5"^^com.spotify:artist("Our Last Night"), "spotify:artist:4gO25bbcu1eFNi8uDCvJFS"^^com.spotify:artist("Derek DiScanio")], release_date=new Date("2019-03-26T00:00:00.000Z"), popularity=50, energy=92, danceability=59 },
C:   { id="spotify:track:5QTxFnGygVM4jFQiBovmRo"^^com.spotify:song("(Don't Fear) The Reaper"), artists=["spotify:artist:00tVTdpEhQQw1bqdu8RCx2"^^com.spotify:artist("Blue Öyster Cult")], release_date=new Date("1976-01-01T00:00:00.000Z"), popularity=75, energy=92, danceability=33 },
C:   { id="spotify:track:7oK9VyNzrYvRFo7nQEYkWN"^^com.spotify:song("Mr. Brightside"), artists=["spotify:artist:0C0XlULifJtAgn6ZNCW2eu"^^com.spotify:artist("The Killers")], release_date=new Date("2004-06-15T00:00:00.000Z"), popularity=78, energy=92, danceability=35 },
C:   { id="spotify:track:2zYzyRzz6pRmhPzyfMEC8s"^^com.spotify:song("Highway to Hell"), artists=["spotify:artist:711MCceyCBcFnzjGY4Q7Un"^^com.spotify:artist("AC/DC")], release_date=new Date("1979-07-27T00:00:00.000Z"), popularity=82, energy=91, danceability=57 },
C:   { id="spotify:track:3CA9pLiwRIGtUBiMjbZmRw"^^com.spotify:song("Nice For What"), artists=["spotify:artist:3TVXtAsR1Inumwj472S9r4"^^com.spotify:artist("Drake")], release_date=new Date("2018-06-29T00:00:00.000Z"), popularity=79, energy=90, danceability=58 },
C:   { id="spotify:track:2WfaOiMkCvy7F5fcp2zZ8L"^^com.spotify:song("Take on Me"), artists=["spotify:artist:2jzc5TC5TVFLXQlBNiIUzE"^^com.spotify:artist("a-ha")], release_date=new Date("1985-06-01T00:00:00.000Z"), popularity=83, energy=90, danceability=57 }
C: ]]
C: #[count=50]
C: #[more=true];
A: sure , i can play you songs with high energy . is there a particular artist you would like ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_search_question(artists);
U: no, just play me anything .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.play_song(song=$?);
C: $dialogue @org.thingpedia.dialogue.transaction.execute;
C: now => @com.spotify.song() => notify
C: #[results=[
C:   { id="spotify:track:7qwt4xUIqQWCu1DJf96g2k"^^com.spotify:song("Hello?"), artists=["spotify:artist:3l0CmX0FuQjFxr8SK7Vqag"^^com.spotify:artist("Clairo"), "spotify:artist:3lLHpTOJ11tWiUNGYN14gt"^^com.spotify:artist("Rejjie Snow")], release_date=new Date("2018-05-25T00:00:00.000Z"), popularity=74, energy=47, danceability=83 },
C:   { id="spotify:track:4sPmO7WMQUAf45kwMOtONw"^^com.spotify:song("Hello"), artists=["spotify:artist:4dpARuHxo51G3z768sgnrY"^^com.spotify:artist("Adele")], release_date=new Date("2016-06-24T00:00:00.000Z"), popularity=71, energy=45, danceability=48 },
C:   { id="spotify:track:7a2IJHzw9WJjoknwdnCop0"^^com.spotify:song("hello!"), artists=["spotify:artist:1dy5WNgIKQU6ezkpZs4y8z"^^com.spotify:artist("ROLE MODEL")], release_date=new Date("2019-11-13T00:00:00.000Z"), popularity=63, energy=46, danceability=79 },
C:   { id="spotify:track:2c62Xf5Po1YSa1N6LOjPHy"^^com.spotify:song("Hello My Old Heart"), artists=["spotify:artist:3Fe3pszR2t4TOBVz41B1WR"^^com.spotify:artist("The Oh Hellos")], release_date=new Date("2011-12-01T00:00:00.000Z"), popularity=64, energy=29, danceability=55 },
C:   { id="spotify:track:1p61zyWNtBhbbAFzg4HUiq"^^com.spotify:song("Hello Beautiful"), artists=["spotify:artist:1qDDkysTxJvFandHwP9CMx"^^com.spotify:artist("Noah Schnacky")], release_date=new Date("2018-01-27T00:00:00.000Z"), popularity=63, energy=47, danceability=50 },
C:   { id="spotify:track:0mHyWYXmmCB9iQyK18m3FQ"^^com.spotify:song("Hello"), artists=["spotify:artist:3gMaNLQm7D9MornNILzdSl"^^com.spotify:artist("Lionel Richie")], release_date=new Date("1983-01-01T00:00:00.000Z"), popularity=59, energy=24, danceability=48 },
C:   { id="spotify:track:30Chv2SmIry70YwtmtaKnj"^^com.spotify:song("Hello"), artists=["spotify:artist:6l3HvQ5sa6mXTsMTB19rO5"^^com.spotify:artist("J. Cole")], release_date=new Date("2014-12-09T00:00:00.000Z"), popularity=59, energy=7, danceability=63 },
C:   { id="spotify:track:6vmAgl2y9MpoZKrVUXrPe5"^^com.spotify:song("Hello Darlin'"), artists=["spotify:artist:7gi3jmwpUpNWdswT8eEprF"^^com.spotify:artist("Conway Twitty")], release_date=new Date("1970-03-23T00:00:00.000Z"), popularity=60, energy=23, danceability=27 },
C:   { id="spotify:track:7bza6R254w7hZyNO9zaIxc"^^com.spotify:song("Hello"), artists=["spotify:artist:5jZeLexrrwGNUy6nv7tzdr"^^com.spotify:artist("C4C"), "spotify:artist:1uJZwuCV2hXbQDSdJvj198"^^com.spotify:artist("kokoro")], release_date=new Date("2020-02-14T00:00:00.000Z"), popularity=61, energy=21, danceability=64 },
C:   { id="spotify:track:0vZ97gHhemKm6c64hTfJNA"^^com.spotify:song("Hello, Goodbye - Remastered 2009"), artists=["spotify:artist:3WrFJ7ztbogyGnTHbHJFl2"^^com.spotify:artist("The Beatles")], release_date=new Date("1967-11-27T00:00:00.000Z"), popularity=65, energy=73, danceability=47 }
C: ]]
C: #[count=50]
C: #[more=true];
C: now => sort energy desc of (@com.spotify.song()) => notify
C: #[results=[
C:   { id="spotify:track:0G21yYKMZoHa30cYVi1iA8"^^com.spotify:song("Welcome To The Jungle"), artists=["spotify:artist:3qm84nBOXUEQ2vnTfUTTFC"^^com.spotify:artist("Guns N' Roses")], release_date=new Date("1987-07-21T00:00:00.000Z"), popularity=72, energy=98, danceability=45 },
C:   { id="spotify:track:7snQQk1zcKl8gZ92AnueZW"^^com.spotify:song("Sweet Child O' Mine"), artists=["spotify:artist:3qm84nBOXUEQ2vnTfUTTFC"^^com.spotify:artist("Guns N' Roses")], release_date=new Date("1987-07-21T00:00:00.000Z"), popularity=74, energy=95, danceability=44 },
C:   { id="spotify:track:5zA8vzDGqPl2AzZkEYQGKh"^^com.spotify:song("Uptown Girl"), artists=["spotify:artist:6zFYqv1mOsgBRQbae3JJ9e"^^com.spotify:artist("Billy Joel")], release_date=new Date("1983-08-08T00:00:00.000Z"), popularity=77, energy=94, danceability=70 },
C:   { id="spotify:track:4xh7W7tlNMIczFhupCPniY"^^com.spotify:song("Go Your Own Way - 2004 Remaster"), artists=["spotify:artist:08GQAI4eElDnROBrJRGE0X"^^com.spotify:artist("Fleetwood Mac")], release_date=new Date("1977-02-04T00:00:00.000Z"), popularity=74, energy=94, danceability=58 },
C:   { id="spotify:track:0YEg2JfkMeJ1hTYqop4A5o"^^com.spotify:song("7 Rings"), artists=["spotify:artist:00YTqRClk82aMchQQpYMd5"^^com.spotify:artist("Our Last Night"), "spotify:artist:4gO25bbcu1eFNi8uDCvJFS"^^com.spotify:artist("Derek DiScanio")], release_date=new Date("2019-03-26T00:00:00.000Z"), popularity=50, energy=92, danceability=59 },
C:   { id="spotify:track:5QTxFnGygVM4jFQiBovmRo"^^com.spotify:song("(Don't Fear) The Reaper"), artists=["spotify:artist:00tVTdpEhQQw1bqdu8RCx2"^^com.spotify:artist("Blue Öyster Cult")], release_date=new Date("1976-01-01T00:00:00.000Z"), popularity=75, energy=92, danceability=33 },
C:   { id="spotify:track:7oK9VyNzrYvRFo7nQEYkWN"^^com.spotify:song("Mr. Brightside"), artists=["spotify:artist:0C0XlULifJtAgn6ZNCW2eu"^^com.spotify:artist("The Killers")], release_date=new Date("2004-06-15T00:00:00.000Z"), popularity=78, energy=92, danceability=35 },
C:   { id="spotify:track:2zYzyRzz6pRmhPzyfMEC8s"^^com.spotify:song("Highway to Hell"), artists=["spotify:artist:711MCceyCBcFnzjGY4Q7Un"^^com.spotify:artist("AC/DC")], release_date=new Date("1979-07-27T00:00:00.000Z"), popularity=82, energy=91, danceability=57 },
C:   { id="spotify:track:3CA9pLiwRIGtUBiMjbZmRw"^^com.spotify:song("Nice For What"), artists=["spotify:artist:3TVXtAsR1Inumwj472S9r4"^^com.spotify:artist("Drake")], release_date=new Date("2018-06-29T00:00:00.000Z"), popularity=79, energy=90, danceability=58 },
C:   { id="spotify:track:2WfaOiMkCvy7F5fcp2zZ8L"^^com.spotify:song("Take on Me"), artists=["spotify:artist:2jzc5TC5TVFLXQlBNiIUzE"^^com.spotify:artist("a-ha")], release_date=new Date("1985-06-01T00:00:00.000Z"), popularity=83, energy=90, danceability=57 }
C: ]]
C: #[count=50]
C: #[more=true];
C: now => @com.spotify.play_song(song=$?);
A: i sorted songs from most to least energy . would you like me to play them ?
AT: $dialogue @org.thingpedia.dialogue.transaction.sys_recommend_one;
AT: now => @com.spotify.play_song(song=$?)
AT: #[confirm=enum(proposed)];
U: yes , have a good day .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.play_song(song=["spotify:track:0G21yYKMZoHa30cYVi1iA8"^^com.spotify:song("Welcome To The Jungle"), "spotify:track:7snQQk1zcKl8gZ92AnueZW"^^com.spotify:song("Sweet Child O' Mine"), "spotify:track:5zA8vzDGqPl2AzZkEYQGKh"^^com.spotify:song("Uptown Girl"), "spotify:track:4xh7W7tlNMIczFhupCPniY"^^com.spotify:song("Go Your Own Way - 2004 Remaster"), "spotify:track:0YEg2JfkMeJ1hTYqop4A5o"^^com.spotify:song("7 Rings"), "spotify:track:5QTxFnGygVM4jFQiBovmRo"^^com.spotify:song("(Don't Fear) The Reaper"), "spotify:track:7oK9VyNzrYvRFo7nQEYkWN"^^com.spotify:song("Mr. Brightside"), "spotify:track:2zYzyRzz6pRmhPzyfMEC8s"^^com.spotify:song("Highway to Hell"), "spotify:track:3CA9pLiwRIGtUBiMjbZmRw"^^com.spotify:song("Nice For What"), "spotify:track:2WfaOiMkCvy7F5fcp2zZ8L"^^com.spotify:song("Take on Me")]);
====
# snips-nlu/spotify-4
U: Play Magic Sam from the thirties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("magic sam")) && release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-6
U: Play music by blowfly from the seventies
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("blowfly")) && release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-8
U: play a tune by Syreeta Wright from twenties from the top
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), contains(artists, null^^com.spotify:artist("syreeta wright")) && release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-13
U: Play some sixties music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-19
U: Play me some music by Prince Alla from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("prince alla")) && release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-34
U: play laura love songs from 1959
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("laura love")) && release_date >= makeDate(1959, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-62
U: PLay some fourties music from Erin Harkes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) && contains(artists, null^^com.spotify:artist("erin harkes")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-71
U: Play music from 2002
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2002, 1, 1) && release_date <= makeDate(2002, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-78
U: Play me a song from the fourties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-86
U: I want to hear Papa Mali's songs from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("papa mali")) && release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-91
U: I want to hear Ready by Frankenstein Drag Queens From Planet 13
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), album == null^^com.spotify:album("ready") && contains(artists, null^^com.spotify:artist("frankenstein drag queens from planet 13")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-92
U: Play a song from the seventies by Pepe Aguilar
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) && contains(artists, null^^com.spotify:artist("pepe aguilar")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-96
U: play songs from the sixties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-110
U: play a 1994 tune by Lena Horne
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1994, 1, 1) && release_date <= makeDate(1994, 12, 31) && contains(artists, null^^com.spotify:artist("lena horne")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-112
U: Play a top fifty track from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-117
U: play something from 1981
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1981, 1, 1) && release_date <= makeDate(1981, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-122
U: Play some songs from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-138
U: Play Niko from the fourties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("niko")) && release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-141
U: play some nineties music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-144
U: Play music from 2015
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2015, 1, 1) && release_date <= makeDate(2015, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-145
U: Play music from 1964
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1964, 1, 1) && release_date <= makeDate(1964, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-152
U: Play me a nineties song by Joseph Genaro
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) && contains(artists, null^^com.spotify:artist("joseph genaro")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-156
U: Play some Rockwell from around 1996
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("rockwell")) && release_date >= makeDate(1996, 1, 1) && release_date <= makeDate(1996, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-158
U: play something from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-160
U: play some 1991 Dave Barker
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1991, 1, 1) && release_date <= makeDate(1991, 12, 31) && contains(artists, null^^com.spotify:artist("dave barker")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-168
U: Play any song from 2001
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2001, 1, 1) && release_date <= makeDate(2001, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-175
U: play music from 1981
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1981, 1, 1) && release_date <= makeDate(1981, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-183
U: Play Barbra Streisand music from 1997 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("barbra streisand")) && release_date >= makeDate(1997, 1, 1) && release_date <= makeDate(1997, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-193
U: Play music from the seventies for me. 
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-198
U: Play music from 2007 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2007, 1, 1) && release_date <= makeDate(2007, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-199
U: Play me a song from the sixties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-209
U: Play eighties music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-219
U: play music from the sixties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-220
U: I want to hear Somi's songs from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("somi")) && release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-221
U: play Tom Jones album from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("tom jones")) && release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-235
U: play 1970 trunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1970, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-237
U: Play a track from 1985 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1985, 1, 1) && release_date <= makeDate(1985, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-270
U: Play Trace Adkins' music from the thirties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("trace adkins")) && release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-280
U: play Abhijeet Bhattacharya from 1986
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("abhijeet bhattacharya")) && release_date >= makeDate(1986, 1, 1) && release_date <= makeDate(1986, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-284
U: Play Dj Drama from the 1976
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("dj drama")) && release_date >= makeDate(1976, 1, 1) && release_date <= makeDate(1976, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-288
U: Play some music from the fourties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-292
U: play fourties tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-300
U: Play eighties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-304
U: Play some music from 1995
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1995, 1, 1) && release_date <= makeDate(1995, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-317
U: play a top 50  tune from the twenties by Willi Williams
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) && contains(artists, null^^com.spotify:artist("willi williams"))) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-318
U: play fifties track music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-324
U: Play Hasan Saltik from 2004
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("hasan saltik")) && release_date >= makeDate(2004, 1, 1) && release_date <= makeDate(2004, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-327
U: play wendy james from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("wendy james")) && release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-333
U: Play me a song from 1976 by Bennie Moten
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1976, 1, 1) && release_date <= makeDate(1976, 12, 31) && contains(artists, null^^com.spotify:artist("bennie moten")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-344
U: play Richard Thompson from the thirties song book
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("richard thompson")) && release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-348
U: Play a sixties song .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-357
U: Lets hear some 2009 music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2009, 1, 1) && release_date <= makeDate(2009, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-363
U: Play some eighties music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-367
U: Play some music from the thirties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-371
U: Play a track from 1959 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1959, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-387
U: Play me a song from the twenties by Randy Bachman
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) && contains(artists, null^^com.spotify:artist("randy bachman")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-399
U: Play music from 2011 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2011, 1, 1) && release_date <= makeDate(2011, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-402
U: play an eighties track 
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-403
U: Can you play me some eighties music by Adele
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) && contains(artists, null^^com.spotify:artist("adele")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-420
U: Please play some music from 1996
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1996, 1, 1) && release_date <= makeDate(1996, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-424
U: play some Kyle Ward from the seventies
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("kyle ward")) && release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-435
U: Play music from 2010 by Jason Donovan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2010, 1, 1) && release_date <= makeDate(2010, 12, 31) && contains(artists, null^^com.spotify:artist("jason donovan")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-437
U: Play Giovanni Battista Guadagnini's 1982 tracks .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("giovanni battista guadagnini")) && release_date >= makeDate(1982, 1, 1) && release_date <= makeDate(1982, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-439
U: Play Greg Raposo songs from the thirties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("greg raposo")) && release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-444
U: Play that new song from 1970
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1970, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-449
U: I want to hear some of David Gilmour's music from 1973
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("david gilmour")) && release_date >= makeDate(1973, 1, 1) && release_date <= makeDate(1973, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-479
U: play some eighties by Amirbai Karnataki
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) && contains(artists, null^^com.spotify:artist("amirbai karnataki")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-489
U: Play the best songs of 2016
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-493
U: Play an album from the fourties, new first.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-504
U: Play fifties music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-520
U: play Robert Stoddard from 1988
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("robert stoddard")) && release_date >= makeDate(1988, 1, 1) && release_date <= makeDate(1988, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-527
U: Play some music from the thirties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-528
U: Play 2011 music 
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2011, 1, 1) && release_date <= makeDate(2011, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-536
U: Play me a 2003 song by Charles Neidich
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2003, 1, 1) && release_date <= makeDate(2003, 12, 31) && contains(artists, null^^com.spotify:artist("charles neidich")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-537
U: I want to hear some songs from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-552
U: Play an album from 1987 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1987, 1, 1) && release_date <= makeDate(1987, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-553
U: Play music from 1960
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1960, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-562
U: play something from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-565
U: Play music from the year 1964
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1964, 1, 1) && release_date <= makeDate(1964, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-581
U: Play an Asha Bhosle song from around 1964
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("asha bhosle")) && release_date >= makeDate(1964, 1, 1) && release_date <= makeDate(1964, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-582
U: Play music from the twenties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-590
U: Play some good music from 2012 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2012, 1, 1) && release_date <= makeDate(2012, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-592
U: Play the top hits of 2016
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-598
U: play a track from the thirties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-612
U: play the 2014 album from la lupe
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2014, 1, 1) && release_date <= makeDate(2014, 12, 31) && contains(artists, null^^com.spotify:artist("la lupe")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-637
U: Play me a nineties sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-640
U: play music from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-646
U: Will you play me the most popular sound track from 2006
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2006, 1, 1) && release_date <= makeDate(2006, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-648
U: Play new track from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-656
U: Play some fifties music by Origa .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) && contains(artists, null^^com.spotify:artist("origa")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-667
U: play Solange 2016 album 
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-685
U: Play the top 1991 sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1991, 1, 1) && release_date <= makeDate(1991, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-688
U: Play a sixties song by Classified
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) && contains(artists, null^^com.spotify:artist("classified")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-693
U: Play top-ten eighties song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-696
U: play dj kentaro from the year 1994
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("dj kentaro")) && release_date >= makeDate(1994, 1, 1) && release_date <= makeDate(1994, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-697
U: play a twenties song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-698
U: Can you play me a track from the nineties?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-702
U: Play the newest released song from 1951
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1951, 1, 1) && release_date <= makeDate(1951, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-708
U: play anything from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-718
U: play a tune from 1962
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1962, 1, 1) && release_date <= makeDate(1962, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-721
U: Play music from 2005 by Justin Broadrick
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2005, 1, 1) && release_date <= makeDate(2005, 12, 31) && contains(artists, null^^com.spotify:artist("justin broadrick")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-722
U: Play the best 1981 sound track from Ric Fierabracci
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1981, 1, 1) && release_date <= makeDate(1981, 12, 31) && contains(artists, null^^com.spotify:artist("ric fierabracci"))) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-729
U: Play fifties from Sirusho Harutyunyan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) && contains(artists, null^^com.spotify:artist("sirusho harutyunyan")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-735
U: Play twenties from Ken Floyd
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) && contains(artists, null^^com.spotify:artist("ken floyd")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-757
U: Play any album from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-764
U: I want to hear a good song from 2016
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-772
U: Play a Wendy Carlos song from 2002
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("wendy carlos")) && release_date >= makeDate(2002, 1, 1) && release_date <= makeDate(2002, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-773
U: Play a new song form the eighties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-779
U: Play sound track  music from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-782
U: I'd like to listen to Diana Vickers best tune from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), contains(artists, null^^com.spotify:artist("diana vickers")) && release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-789
U: Play an album from the fourties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-791
U: play soem nineties Charles Thompson
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) && contains(artists, null^^com.spotify:artist("charles thompson")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-793
U: Let's hear some tunes from the thirties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-817
U: Play me a twenties song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-825
U: Play me a fifties song by Chingy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) && contains(artists, null^^com.spotify:artist("chingy")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-830
U: Give me an album from 1972 to listen to.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1972, 1, 1) && release_date <= makeDate(1972, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-838
U: Play some sister rosetta tharpe songs from the eighties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("sister rosetta tharpe")) && release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-840
U: Play a twenties tune by Jodie Aysha .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) && contains(artists, null^^com.spotify:artist("jodie aysha")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-844
U: Play music by Paulinho Da Viola from 1965
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("paulinho da viola")) && release_date >= makeDate(1965, 1, 1) && release_date <= makeDate(1965, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-851
U: Play Tina Cousins from 1956
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("tina cousins")) && release_date >= makeDate(1956, 1, 1) && release_date <= makeDate(1956, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-853
U: Play me songs from 1955
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1955, 1, 1) && release_date <= makeDate(1955, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-858
U: play music from 2014
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2014, 1, 1) && release_date <= makeDate(2014, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-866
U: I want to hear music from carman from the 1966 album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("carman")) && release_date >= makeDate(1966, 1, 1) && release_date <= makeDate(1966, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-869
U: Play Vic Ruggiero music from 2007
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("vic ruggiero")) && release_date >= makeDate(2007, 1, 1) && release_date <= makeDate(2007, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-872
U: Play fifties music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-873
U: Play some nineties Eliza Carthy
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) && contains(artists, null^^com.spotify:artist("eliza carthy")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-882
U: Play Igor Nikolayev music from the fourties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("igor nikolayev")) && release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-887
U: Play fifties music by Ahmed Abdul Malik
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) && contains(artists, null^^com.spotify:artist("ahmed abdul malik")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-916
U: Play music from 1958 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1958, 1, 1) && release_date <= makeDate(1958, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-926
U: Play some 1987 Edie Brickell .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1987, 1, 1) && release_date <= makeDate(1987, 12, 31) && contains(artists, null^^com.spotify:artist("edie brickell")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-933
U: play caitlin cary from the fourties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("caitlin cary")) && release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-942
U: play any sixties song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-954
U: Play some Paulinho Da Viola from 1965 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("paulinho da viola")) && release_date >= makeDate(1965, 1, 1) && release_date <= makeDate(1965, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-966
U: Play me a song from 2008
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2008, 1, 1) && release_date <= makeDate(2008, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-986
U: play Paula Campbell music from 1993
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("paula campbell")) && release_date >= makeDate(1993, 1, 1) && release_date <= makeDate(1993, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-988
U: Play some fifties music by Chris Brown .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) && contains(artists, null^^com.spotify:artist("chris brown")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-995
U: Play a song from 2003
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2003, 1, 1) && release_date <= makeDate(2003, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-997
U: Can I hear tod ashley music from 1953?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("tod ashley")) && release_date >= makeDate(1953, 1, 1) && release_date <= makeDate(1953, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1001
U: Please play an album from 1987
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1987, 1, 1) && release_date <= makeDate(1987, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1005
U: Play me Sun Ra songs from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("sun ra")) && release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1010
U: I want to hear the latest twenties album from Kyle Riabko
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) && contains(artists, null^^com.spotify:artist("kyle riabko"))))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1017
U: Can you play some eighties music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1021
U: play some seventies Dj Colette
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) && contains(artists, null^^com.spotify:artist("dj colette")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1022
U: play music from 1950
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1950, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1030
U: I want to hear that tune from 2010
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2010, 1, 1) && release_date <= makeDate(2010, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1047
U: Play the greatest 1966 album out there
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1966, 1, 1) && release_date <= makeDate(1966, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1049
U: Play 1958 music

UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1958, 1, 1) && release_date <= makeDate(1958, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1077
U: I want to hear Steven Harwell from the thirties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("steven harwell")) && release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1079
U: Play 1958 by wayne petti
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1958, 1, 1) && release_date <= makeDate(1958, 12, 31) && contains(artists, null^^com.spotify:artist("wayne petti")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1080
U: Play something from 1985 by Billy Werner
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1985, 1, 1) && release_date <= makeDate(1985, 12, 31) && contains(artists, null^^com.spotify:artist("billy werner")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1088
U: Play music from the seventies
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1092
U: Play me an eighties song by Wes Dakus
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) && contains(artists, null^^com.spotify:artist("wes dakus")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1097
U: I want to hear any tune from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1098
U: Play Jono El Grande from the thirties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("jono el grande")) && release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1104
U: Play some music from the twenties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1108
U: Play me a song from 1972 by Sweet Emma Barrett
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1972, 1, 1) && release_date <= makeDate(1972, 12, 31) && contains(artists, null^^com.spotify:artist("sweet emma barrett")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1117
U: I want to hear Nokko's songs from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("nokko")) && release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1124
U: Play the latest 1973 album by Peter Derose .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1973, 1, 1) && release_date <= makeDate(1973, 12, 31) && contains(artists, null^^com.spotify:artist("peter derose"))))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1125
U: Play some Sabah from the eighties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("sabah")) && release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1129
U: Play a sound track from 1952 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1952, 1, 1) && release_date <= makeDate(1952, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1138
U: Play me a song by Avispa Music from 1965
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("avispa music")) && release_date >= makeDate(1965, 1, 1) && release_date <= makeDate(1965, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1157
U: play an eighties song by Ler Lalonde
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) && contains(artists, null^^com.spotify:artist("ler lalonde")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1164
U: I want to hear some twenties music from Billy Sheehan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) && contains(artists, null^^com.spotify:artist("billy sheehan")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1165
U: Play some songs from 1958
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1958, 1, 1) && release_date <= makeDate(1958, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1180
U: Can you play a sound track from 1963?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1963, 1, 1) && release_date <= makeDate(1963, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1196
U: play a sixties song by George Sanger
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) && contains(artists, null^^com.spotify:artist("george sanger")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1200
U: Play a song by Alasdair Roberts from 1996
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("alasdair roberts")) && release_date >= makeDate(1996, 1, 1) && release_date <= makeDate(1996, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1207
U: Play Eddie Meduza from the thirties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("eddie meduza")) && release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1211
U: play Vivian Stanshall from 1962
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("vivian stanshall")) && release_date >= makeDate(1962, 1, 1) && release_date <= makeDate(1962, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1213
U: Play music from 1977
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1977, 1, 1) && release_date <= makeDate(1977, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1224
U: play the album by Paul Barker playing the greatest from 1978
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), contains(artists, null^^com.spotify:artist("paul barker")) && release_date >= makeDate(1978, 1, 1) && release_date <= makeDate(1978, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1230
U: Play Henrie Mutuku album from 1957
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("henrie mutuku")) && release_date >= makeDate(1957, 1, 1) && release_date <= makeDate(1957, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1232
U: play some 2002 music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2002, 1, 1) && release_date <= makeDate(2002, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1233
U: I want to hear that track from 1991
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1991, 1, 1) && release_date <= makeDate(1991, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1249
U: play top-twenty song from 2015
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2015, 1, 1) && release_date <= makeDate(2015, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1256
U: Play music from Clark Kent in the year 1987
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("clark kent")) && release_date >= makeDate(1987, 1, 1) && release_date <= makeDate(1987, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1261
U: Play some music from 1985 by Rolf Harris
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1985, 1, 1) && release_date <= makeDate(1985, 12, 31) && contains(artists, null^^com.spotify:artist("rolf harris")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1268
U: play a track from 2004
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2004, 1, 1) && release_date <= makeDate(2004, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1273
U: Play some Mark Tremonti from the thirties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("mark tremonti")) && release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1274
U: play the greatest 1972 album by Wes Dakus
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1972, 1, 1) && release_date <= makeDate(1972, 12, 31) && contains(artists, null^^com.spotify:artist("wes dakus"))) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1281
U: Play me the greatest track of 1966
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1966, 1, 1) && release_date <= makeDate(1966, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1307
U: Play the last sound track by Soko from around 1975
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), contains(artists, null^^com.spotify:artist("soko")) && release_date >= makeDate(1975, 1, 1) && release_date <= makeDate(1975, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1311
U: Play a song from 1973 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1973, 1, 1) && release_date <= makeDate(1973, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1314
U: Play a new song from 1976 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1976, 1, 1) && release_date <= makeDate(1976, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1321
U: Play me a song from 2016
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1326
U: I want to hear music from 1975
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1975, 1, 1) && release_date <= makeDate(1975, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1329
U: play a top-fifty 1965 album by Ski
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1965, 1, 1) && release_date <= makeDate(1965, 12, 31) && contains(artists, null^^com.spotify:artist("ski"))) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1330
U: Play  music from the thirties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1332
U: Ply best 1973 sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1973, 1, 1) && release_date <= makeDate(1973, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1334
U: I would like to hear music from 1993
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1993, 1, 1) && release_date <= makeDate(1993, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1337
U: I want to hear Major Harris's songs from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("major harris")) && release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1350
U: Can you play a song from the fourties by George Martin
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) && contains(artists, null^^com.spotify:artist("george martin")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1358
U: Play the most popular sound track from the 2006
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(2006, 1, 1) && release_date <= makeDate(2006, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1359
U: Play tuomas holopainen's The 21 Project .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("tuomas holopainen")) && album == null^^com.spotify:album("the 21 project") => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1362
U: Play nineties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1379
U: Play some music from the sixties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1384
U: Play a song from 2013 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2013, 1, 1) && release_date <= makeDate(2013, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1385
U: play 1951 tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1951, 1, 1) && release_date <= makeDate(1951, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1387
U: Play any nineties music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1406
U: Play some Oleg Anofriyev from 1960 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("oleg anofriyev")) && release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1960, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1412
U: Play some Antony Harding songs from the eighties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("antony harding")) && release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1414
U: Play music from the seventies
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1425
U: play something from 1971 by John Bonham
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1971, 1, 1) && release_date <= makeDate(1971, 12, 31) && contains(artists, null^^com.spotify:artist("john bonham")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1429
U: play 1977 good track tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1977, 1, 1) && release_date <= makeDate(1977, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1445
U: Play any song from 2006
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2006, 1, 1) && release_date <= makeDate(2006, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1446
U: Play some Sonu Niigaam from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("sonu niigaam")) && release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1459
U: Play music from 1999
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1999, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1462
U: I wish to listen to some fifties music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1486
U: Play some music from 1962 from Adeyto
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1962, 1, 1) && release_date <= makeDate(1962, 12, 31) && contains(artists, null^^com.spotify:artist("adeyto")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1488
U: Play any song from the eighties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1499
U: Play me a 1990 sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1990, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1503
U: play Barry Manilow from the twenties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("barry manilow")) && release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1514
U: play the best album from the seventies
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1515
U: Play music from 2016 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1525
U: I want to listen to seventies music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1533
U: Play music from the sixties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1537
U: Play sixties music by giovanni battista guadagnini .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) && contains(artists, null^^com.spotify:artist("giovanni battista guadagnini")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1563
U: play some songs from the fourties by yoshiki fukuyama
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) && contains(artists, null^^com.spotify:artist("yoshiki fukuyama")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1567
U: play music by Charlie Adams from 1954
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("charlie adams")) && release_date >= makeDate(1954, 1, 1) && release_date <= makeDate(1954, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1571
U: Play a 2001 tune
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2001, 1, 1) && release_date <= makeDate(2001, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1601
U: play some fifties tunes by Mike Mccready
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) && contains(artists, null^^com.spotify:artist("mike mccready")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1609
U: Play Gary Chapman music from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("gary chapman")) && release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1610
U: Play some Armik from the fourties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("armik")) && release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1611
U: play a popular sort of fifties tune music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1613
U: Play music from 1989 by Maya .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1989, 1, 1) && release_date <= makeDate(1989, 12, 31) && contains(artists, null^^com.spotify:artist("maya")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1618
U: Play Arif music from the fourties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("arif")) && release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1623
U: Play paul ortiz music from 1990
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("paul ortiz")) && release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1990, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1631
U: Proceed with music from 2003 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2003, 1, 1) && release_date <= makeDate(2003, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1632
U: Play Elkie Brooks seventies sound track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("elkie brooks")) && release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1640
U: Play some caribou from the sixties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("caribou")) && release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1650
U: Play all music Alan released in 1997
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("alan")) && release_date >= makeDate(1997, 1, 1) && release_date <= makeDate(1997, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1655
U: play some sixties music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1657
U: Play music year 2016 by artist Michiru Yamane
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2016, 1, 1) && release_date <= makeDate(2016, 12, 31) && contains(artists, null^^com.spotify:artist("michiru yamane")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1673
U: play eighties track
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1674
U: Wish to hear music from the year 1996
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1996, 1, 1) && release_date <= makeDate(1996, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1685
U: Play some Paul Stookey from the sixties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("paul stookey")) && release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1692
U: I want to hear a track from the fourties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1709
U: Play some seventies track from top Rie Tomosaka
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) && contains(artists, null^^com.spotify:artist("rie tomosaka"))) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1714
U: Please play a song for me from 1959
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1959, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1718
U: Play me a fifties song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1746
U: I wish to listen to eighties music by Mike Dean .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) && contains(artists, null^^com.spotify:artist("mike dean")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1751
U: Play a 1991 song by Anila Mirza
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1991, 1, 1) && release_date <= makeDate(1991, 12, 31) && contains(artists, null^^com.spotify:artist("anila mirza")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1758
U: Play some 2011 music by Dan Healy .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2011, 1, 1) && release_date <= makeDate(2011, 12, 31) && contains(artists, null^^com.spotify:artist("dan healy")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1761
U: Listen to music from 1975
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1975, 1, 1) && release_date <= makeDate(1975, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1764
U: play a tune from 2000 by Bronislau Kaper
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2000, 1, 1) && release_date <= makeDate(2000, 12, 31) && contains(artists, null^^com.spotify:artist("bronislau kaper")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1765
U: Play a song from 1994 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1994, 1, 1) && release_date <= makeDate(1994, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1773
U: Play a top-50 tune from 1982 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1982, 1, 1) && release_date <= makeDate(1982, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1777
U: play the music track of 1998
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1998, 1, 1) && release_date <= makeDate(1998, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1778
U: Play some music by Jody Williams from 2001
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("jody williams")) && release_date >= makeDate(2001, 1, 1) && release_date <= makeDate(2001, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1787
U: I'm looking for the last track by Fei Yu Ching from the fourties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), contains(artists, null^^com.spotify:artist("fei yu ching")) && release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1793
U: Play a song from 1950
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1950, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1795
U: play a new song from the seventies
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1803
U: Play some ivy anderson from around 1967
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("ivy anderson")) && release_date >= makeDate(1967, 1, 1) && release_date <= makeDate(1967, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1804
U: play the newest sound track from the thirties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1808
U: play some sad songs from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1816
U: play twenties tunes
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1823
U: Play music from 1958
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1958, 1, 1) && release_date <= makeDate(1958, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1828
U: Play music from 1964 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1964, 1, 1) && release_date <= makeDate(1964, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1841
U: Play a rock track from 1984
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains~(genres, "rock") && release_date >= makeDate(1984, 1, 1) && release_date <= makeDate(1984, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1847
U: Play a 2007 track from Adam Jones
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2007, 1, 1) && release_date <= makeDate(2007, 12, 31) && contains(artists, null^^com.spotify:artist("adam jones")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1856
U: Can you play some fifties music by lavern baker
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) && contains(artists, null^^com.spotify:artist("lavern baker")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1858
U: play anything from 1970
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1970, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1859
U: I wish to enjoy some fifties music by Johnny Paycheck .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) && contains(artists, null^^com.spotify:artist("johnny paycheck")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1861
U: Play me a seventies song
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1970, 1, 1) && release_date <= makeDate(1979, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1869
U: Play best fourties from david izquierdo on album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) && contains(artists, null^^com.spotify:artist("david izquierdo"))) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1885
U: Play music from 2015
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2015, 1, 1) && release_date <= makeDate(2015, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1887
U: Play me a song by Carol Arnauld from 2003
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("carol arnauld")) && release_date >= makeDate(2003, 1, 1) && release_date <= makeDate(2003, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1890
U: Please play me a popular track from 1984 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => sort popularity desc of (@com.spotify.song(), release_date >= makeDate(1984, 1, 1) && release_date <= makeDate(1984, 12, 31)) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1905
U: Can you play some music from 1999
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1999, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1907
U: play some King Tubby from the eighties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("king tubby")) && release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1909
U: Play Randy Castillo's music from 1952 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("randy castillo")) && release_date >= makeDate(1952, 1, 1) && release_date <= makeDate(1952, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1920
U: Play me a 1986 Jim Root
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1986, 1, 1) && release_date <= makeDate(1986, 12, 31) && contains(artists, null^^com.spotify:artist("jim root")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1927
U: play a tune from 1973
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1973, 1, 1) && release_date <= makeDate(1973, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1933
U: play Yusef Lateef songs from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("yusef lateef")) && release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1951
U: I want to hear music from the sixties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1958
U: Play me some music from 1999
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1999, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1963
U: play the last song from the thirties by Airto Moreira
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) && contains(artists, null^^com.spotify:artist("airto moreira"))))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1968
U: play Luis Alfonzo Larrain from 1995
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("luis alfonzo larrain")) && release_date >= makeDate(1995, 1, 1) && release_date <= makeDate(1995, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1972
U: play some music from the thirties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1983
U: Play some music from 1989 by Sanjeev Abhyankar .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1989, 1, 1) && release_date <= makeDate(1989, 12, 31) && contains(artists, null^^com.spotify:artist("sanjeev abhyankar")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1986
U: play music from the year 1979
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1979, 1, 1) && release_date <= makeDate(1979, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1993
U: Play music from 1954
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1954, 1, 1) && release_date <= makeDate(1954, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-1997
U: play 2007 tunes by Bunny Berigan
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2007, 1, 1) && release_date <= makeDate(2007, 12, 31) && contains(artists, null^^com.spotify:artist("bunny berigan")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2005
U: Song from Brian Chase in 2004
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("brian chase")) && release_date >= makeDate(2004, 1, 1) && release_date <= makeDate(2004, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2006
U: give me something from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2015
U: Play music from Sleepy John Estes from 2002 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("sleepy john estes")) && release_date >= makeDate(2002, 1, 1) && release_date <= makeDate(2002, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2016
U: Play a sound track from 1952 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1952, 1, 1) && release_date <= makeDate(1952, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2028
U: I wish to listen to some fifties music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2037
U: Play music from the thirties by Swjatoslaw Wakartschuk .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) && contains(artists, null^^com.spotify:artist("swjatoslaw wakartschuk")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2040
U: Can you play nineties music from Paul Kelly?
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) && contains(artists, null^^com.spotify:artist("paul kelly")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2044
U: Play a tune from 2007 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2007, 1, 1) && release_date <= makeDate(2007, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2049
U: Play some 1988 Harry T. Burleigh
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1988, 1, 1) && release_date <= makeDate(1988, 12, 31) && contains(artists, null^^com.spotify:artist("harry t. burleigh")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2052
U: Please play a track from the nineties by any artist
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2054
U: let's listen to the 1986 sound track by Mike Park
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1986, 1, 1) && release_date <= makeDate(1986, 12, 31) && contains(artists, null^^com.spotify:artist("mike park")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2065
U: play music from 1974
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1974, 1, 1) && release_date <= makeDate(1974, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2078
U: I would like to hear music from 1993
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1993, 1, 1) && release_date <= makeDate(1993, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2090
U: Play some nineties stuff from Clem Burke .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) && contains(artists, null^^com.spotify:artist("clem burke")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2102
U: Play a song from 1994 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1994, 1, 1) && release_date <= makeDate(1994, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2105
U: Please play something from the fifties by Roscoe
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) && contains(artists, null^^com.spotify:artist("roscoe")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2130
U: Please play some nineties music by Tommy Johnson .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) && contains(artists, null^^com.spotify:artist("tommy johnson")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2133
U: Play something by the artist Jenifer from 2003
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("jenifer")) && release_date >= makeDate(2003, 1, 1) && release_date <= makeDate(2003, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2136
U: Play music from Stacy Ferguson from the fourties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("stacy ferguson")) && release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2146
U: I want to hear an album from 2010
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(2010, 1, 1) && release_date <= makeDate(2010, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2152
U: I want to hear music from carman from the 1966 album
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("carman")) && release_date >= makeDate(1966, 1, 1) && release_date <= makeDate(1966, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2153
U: Play some twenties music
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2154
U: Play some 1983 Jon Brooks
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1983, 1, 1) && release_date <= makeDate(1983, 12, 31) && contains(artists, null^^com.spotify:artist("jon brooks")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2164
U: Play a tune from 1973 .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1973, 1, 1) && release_date <= makeDate(1973, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2165
U: Play Arif music from the fourties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("arif")) && release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2168
U: I'm looking for the last track by Fei Yu Ching from the fourties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => (sort release_date desc of (@com.spotify.song(), contains(artists, null^^com.spotify:artist("fei yu ching")) && release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31)))[1] => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2171
U: Play me a track from the sixties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2176
U: play me something from the fifties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2187
U: Play nineties music.
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2188
U: Play a song from the thirties by Bruno Pelletier
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) && contains(artists, null^^com.spotify:artist("bruno pelletier")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2190
U: We want to listen to nineties music from mike burkett .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) && contains(artists, null^^com.spotify:artist("mike burkett")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2192
U: Please play some nineties music album .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2194
U: I want to hear music from the sixties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1960, 1, 1) && release_date <= makeDate(1969, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2196
U: play some music from the thirties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2209
U: I wish to enjoy some fifties music by Johnny Paycheck .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1950, 1, 1) && release_date <= makeDate(1959, 12, 31) && contains(artists, null^^com.spotify:artist("johnny paycheck")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2213
U: Something by Danielle Polanco in 1986
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("danielle polanco")) && release_date >= makeDate(1986, 1, 1) && release_date <= makeDate(1986, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2222
U: I want to hear Eddi Reader from the twenties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("eddi reader")) && release_date >= makeDate(1920, 1, 1) && release_date <= makeDate(1929, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2239
U: play something from 1971 by John Bonham
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1971, 1, 1) && release_date <= makeDate(1971, 12, 31) && contains(artists, null^^com.spotify:artist("john bonham")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2266
U: Play music from the thirties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2269
U: An interesting piece from 1991 please
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1991, 1, 1) && release_date <= makeDate(1991, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2271
U: Play Device music from the fourties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("device")) && release_date >= makeDate(1940, 1, 1) && release_date <= makeDate(1949, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2284
U: I want to listen to martina mcbride music from 1995
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("martina mcbride")) && release_date >= makeDate(1995, 1, 1) && release_date <= makeDate(1995, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2290
U: Start playing anything Mike Muir made in the thirties
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), contains(artists, null^^com.spotify:artist("mike muir")) && release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2291
U: Play some thirties Frank Wildhorn
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1930, 1, 1) && release_date <= makeDate(1939, 12, 31) && contains(artists, null^^com.spotify:artist("frank wildhorn")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2293
U: Play music from 1972
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1972, 1, 1) && release_date <= makeDate(1972, 12, 31) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2294
U: I want to play a song from the nineties by Roddy Woomble
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1990, 1, 1) && release_date <= makeDate(1999, 12, 31) && contains(artists, null^^com.spotify:artist("roddy woomble")) => @com.spotify.play_song(song=id);
====
# snips-nlu/spotify-2297
U: Play music from the eighties .
UT: $dialogue @org.thingpedia.dialogue.transaction.execute;
UT: now => @com.spotify.song(), release_date >= makeDate(1980, 1, 1) && release_date <= makeDate(1989, 12, 31) => @com.spotify.play_song(song=id);
